//
// File generated by rootcint at Wed Mar 25 14:47:05 2009

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__DDAControlDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DDAControlPanel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_DDAControlPanel(void *p);
   static void deleteArray_DDAControlPanel(void *p);
   static void destruct_DDAControlPanel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DDAControlPanel*)
   {
      ::DDAControlPanel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DDAControlPanel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DDAControlPanel", ::DDAControlPanel::Class_Version(), "./snake-pgm/inc/DDAControlPanel.h", 159,
                  typeid(::DDAControlPanel), DefineBehavior(ptr, ptr),
                  &::DDAControlPanel::Dictionary, isa_proxy, 0,
                  sizeof(::DDAControlPanel) );
      instance.SetDelete(&delete_DDAControlPanel);
      instance.SetDeleteArray(&deleteArray_DDAControlPanel);
      instance.SetDestructor(&destruct_DDAControlPanel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DDAControlPanel*)
   {
      return GenerateInitInstanceLocal((::DDAControlPanel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DDAControlPanel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *DDAControlPanel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DDAControlPanel::Class_Name()
{
   return "DDAControlPanel";
}

//______________________________________________________________________________
const char *DDAControlPanel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DDAControlPanel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DDAControlPanel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DDAControlPanel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DDAControlPanel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DDAControlPanel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DDAControlPanel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DDAControlPanel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void DDAControlPanel::Streamer(TBuffer &R__b)
{
   // Stream an object of class DDAControlPanel.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGMainFrame::Streamer(R__b);
      fHeap.Streamer(R__b);
      R__b >> fMenuBar;
      R__b >> fMenuFile;
      R__b >> fMenuSettings;
      R__b >> fMenuServer;
      R__b >> fMenuHelp;
      R__b >> fCFrame;
      R__b >> fFButtons;
      R__b >> fCbuttons;
      R__b >> fSFrame;
      R__b >> fScanPeriod;
      R__b >> fCycles;
      R__b >> fFFrame;
      R__b >> fDataFile;
      R__b >> fSubdevs;
      R__b >> fScanModes;
      R__b >> fHFrame;
      R__b >> fCalFrame;
      R__b >> fCRow1Frame;
      R__b >> fCRow2Frame;
      R__b >> fChargeState;
      R__b >> fEnergy;
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fCalib[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fVoltage[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fStepWidth[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fRange[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fXYFrame[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fScanProfiles[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fDistFrame[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fStepFrame[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fStopPosFrame[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fOffsetZeroButton[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fOffsetD[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fOffsetS[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fAmplitudeD[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fAmplitudeS[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fStopZeroButton[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fStopPosS[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fStopPosD[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fNofPixels[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fScanLimitsD[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fScanLimitsS[R__i];
      R__b >> fFQFrame;
      R__b >> fPreScales;
      R__b >> fSDFrame;
      R__b >> fPacerClock;
      R__b >> fSoftScale;
      R__b >> fScaleValue;
      R__b >> fAmplYScale;
      for (R__i = 0; R__i < 2; R__i++)
         fLofScanProfiles[R__i].Streamer(R__b);
      fLofSubdevs.Streamer(R__b);
      fLofPreScales.Streamer(R__b);
      fLofScanModes.Streamer(R__b);
      fLofControlButtons.Streamer(R__b);
      fLofSoftScaleButtons.Streamer(R__b);
      fLofFileButtons.Streamer(R__b);
      R__b >> fFrameGC;
      R__b >> fLabelGC;
      R__b >> fWhiteEntryGC;
      R__b >> fYellowEntryGC;
      R__b >> fGrayButtonGC;
      R__b >> fBlueButtonGC;
      fFocusList.Streamer(R__b);
      R__b.StreamObject(&(fDataFileInfo),typeid(TGFileInfo));
      fServerName.Streamer(R__b);
      R__b >> fServerPort;
      fServerProg.Streamer(R__b);
      fKeyBindings.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, DDAControlPanel::IsA());
   } else {
      R__c = R__b.WriteVersion(DDAControlPanel::IsA(), kTRUE);
      TGMainFrame::Streamer(R__b);
      fHeap.Streamer(R__b);
      R__b << fMenuBar;
      R__b << fMenuFile;
      R__b << fMenuSettings;
      R__b << fMenuServer;
      R__b << fMenuHelp;
      R__b << fCFrame;
      R__b << fFButtons;
      R__b << fCbuttons;
      R__b << fSFrame;
      R__b << fScanPeriod;
      R__b << fCycles;
      R__b << fFFrame;
      R__b << fDataFile;
      R__b << fSubdevs;
      R__b << fScanModes;
      R__b << fHFrame;
      R__b << fCalFrame;
      R__b << fCRow1Frame;
      R__b << fCRow2Frame;
      R__b << fChargeState;
      R__b << fEnergy;
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fCalib[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fVoltage[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fStepWidth[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fRange[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fXYFrame[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fScanProfiles[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fDistFrame[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fStepFrame[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fStopPosFrame[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fOffsetZeroButton[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fOffsetD[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fOffsetS[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fAmplitudeD[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fAmplitudeS[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fStopZeroButton[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fStopPosS[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fStopPosD[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fNofPixels[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fScanLimitsD[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fScanLimitsS[R__i];
      R__b << fFQFrame;
      R__b << fPreScales;
      R__b << fSDFrame;
      R__b << fPacerClock;
      R__b << fSoftScale;
      R__b << fScaleValue;
      R__b << fAmplYScale;
      for (R__i = 0; R__i < 2; R__i++)
         fLofScanProfiles[R__i].Streamer(R__b);
      fLofSubdevs.Streamer(R__b);
      fLofPreScales.Streamer(R__b);
      fLofScanModes.Streamer(R__b);
      fLofControlButtons.Streamer(R__b);
      fLofSoftScaleButtons.Streamer(R__b);
      fLofFileButtons.Streamer(R__b);
      R__b << fFrameGC;
      R__b << fLabelGC;
      R__b << fWhiteEntryGC;
      R__b << fYellowEntryGC;
      R__b << fGrayButtonGC;
      R__b << fBlueButtonGC;
      fFocusList.Streamer(R__b);
      R__b.StreamObject(&(fDataFileInfo),typeid(TGFileInfo));
      fServerName.Streamer(R__b);
      R__b << fServerPort;
      fServerProg.Streamer(R__b);
      fKeyBindings.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void DDAControlPanel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class DDAControlPanel.
      TClass *R__cl = ::DDAControlPanel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fHeap", &fHeap);
      fHeap.ShowMembers(R__insp, strcat(R__parent,"fHeap.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "*fMenuFile", &fMenuFile);
      R__insp.Inspect(R__cl, R__parent, "*fMenuSettings", &fMenuSettings);
      R__insp.Inspect(R__cl, R__parent, "*fMenuServer", &fMenuServer);
      R__insp.Inspect(R__cl, R__parent, "*fMenuHelp", &fMenuHelp);
      R__insp.Inspect(R__cl, R__parent, "*fCFrame", &fCFrame);
      R__insp.Inspect(R__cl, R__parent, "*fFButtons", &fFButtons);
      R__insp.Inspect(R__cl, R__parent, "*fCbuttons", &fCbuttons);
      R__insp.Inspect(R__cl, R__parent, "*fSFrame", &fSFrame);
      R__insp.Inspect(R__cl, R__parent, "*fScanPeriod", &fScanPeriod);
      R__insp.Inspect(R__cl, R__parent, "*fCycles", &fCycles);
      R__insp.Inspect(R__cl, R__parent, "*fFFrame", &fFFrame);
      R__insp.Inspect(R__cl, R__parent, "*fDataFile", &fDataFile);
      R__insp.Inspect(R__cl, R__parent, "*fSubdevs", &fSubdevs);
      R__insp.Inspect(R__cl, R__parent, "*fScanModes", &fScanModes);
      R__insp.Inspect(R__cl, R__parent, "*fHFrame", &fHFrame);
      R__insp.Inspect(R__cl, R__parent, "*fCalFrame", &fCalFrame);
      R__insp.Inspect(R__cl, R__parent, "*fCRow1Frame", &fCRow1Frame);
      R__insp.Inspect(R__cl, R__parent, "*fCRow2Frame", &fCRow2Frame);
      R__insp.Inspect(R__cl, R__parent, "*fChargeState", &fChargeState);
      R__insp.Inspect(R__cl, R__parent, "*fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__parent, "*fCalib[2]", &fCalib);
      R__insp.Inspect(R__cl, R__parent, "*fVoltage[2]", &fVoltage);
      R__insp.Inspect(R__cl, R__parent, "*fStepWidth[2]", &fStepWidth);
      R__insp.Inspect(R__cl, R__parent, "*fRange[2]", &fRange);
      R__insp.Inspect(R__cl, R__parent, "*fXYFrame[2]", &fXYFrame);
      R__insp.Inspect(R__cl, R__parent, "*fScanProfiles[2]", &fScanProfiles);
      R__insp.Inspect(R__cl, R__parent, "*fDistFrame[2]", &fDistFrame);
      R__insp.Inspect(R__cl, R__parent, "*fStepFrame[2]", &fStepFrame);
      R__insp.Inspect(R__cl, R__parent, "*fStopPosFrame[2]", &fStopPosFrame);
      R__insp.Inspect(R__cl, R__parent, "*fOffsetZeroButton[2]", &fOffsetZeroButton);
      R__insp.Inspect(R__cl, R__parent, "*fOffsetD[2]", &fOffsetD);
      R__insp.Inspect(R__cl, R__parent, "*fOffsetS[2]", &fOffsetS);
      R__insp.Inspect(R__cl, R__parent, "*fAmplitudeD[2]", &fAmplitudeD);
      R__insp.Inspect(R__cl, R__parent, "*fAmplitudeS[2]", &fAmplitudeS);
      R__insp.Inspect(R__cl, R__parent, "*fStopZeroButton[2]", &fStopZeroButton);
      R__insp.Inspect(R__cl, R__parent, "*fStopPosS[2]", &fStopPosS);
      R__insp.Inspect(R__cl, R__parent, "*fStopPosD[2]", &fStopPosD);
      R__insp.Inspect(R__cl, R__parent, "*fNofPixels[2]", &fNofPixels);
      R__insp.Inspect(R__cl, R__parent, "*fScanLimitsD[2]", &fScanLimitsD);
      R__insp.Inspect(R__cl, R__parent, "*fScanLimitsS[2]", &fScanLimitsS);
      R__insp.Inspect(R__cl, R__parent, "*fFQFrame", &fFQFrame);
      R__insp.Inspect(R__cl, R__parent, "*fPreScales", &fPreScales);
      R__insp.Inspect(R__cl, R__parent, "*fSDFrame", &fSDFrame);
      R__insp.Inspect(R__cl, R__parent, "*fPacerClock", &fPacerClock);
      R__insp.Inspect(R__cl, R__parent, "*fSoftScale", &fSoftScale);
      R__insp.Inspect(R__cl, R__parent, "*fScaleValue", &fScaleValue);
      R__insp.Inspect(R__cl, R__parent, "*fAmplYScale", &fAmplYScale);
      R__insp.Inspect(R__cl, R__parent, "fLofScanProfiles[2]", fLofScanProfiles);
      R__insp.Inspect(R__cl, R__parent, "fLofSubdevs", &fLofSubdevs);
      fLofSubdevs.ShowMembers(R__insp, strcat(R__parent,"fLofSubdevs.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLofPreScales", &fLofPreScales);
      fLofPreScales.ShowMembers(R__insp, strcat(R__parent,"fLofPreScales.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLofScanModes", &fLofScanModes);
      fLofScanModes.ShowMembers(R__insp, strcat(R__parent,"fLofScanModes.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLofControlButtons", &fLofControlButtons);
      fLofControlButtons.ShowMembers(R__insp, strcat(R__parent,"fLofControlButtons.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLofSoftScaleButtons", &fLofSoftScaleButtons);
      fLofSoftScaleButtons.ShowMembers(R__insp, strcat(R__parent,"fLofSoftScaleButtons.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLofFileButtons", &fLofFileButtons);
      fLofFileButtons.ShowMembers(R__insp, strcat(R__parent,"fLofFileButtons.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFrameGC", &fFrameGC);
      R__insp.Inspect(R__cl, R__parent, "*fLabelGC", &fLabelGC);
      R__insp.Inspect(R__cl, R__parent, "*fWhiteEntryGC", &fWhiteEntryGC);
      R__insp.Inspect(R__cl, R__parent, "*fYellowEntryGC", &fYellowEntryGC);
      R__insp.Inspect(R__cl, R__parent, "*fGrayButtonGC", &fGrayButtonGC);
      R__insp.Inspect(R__cl, R__parent, "*fBlueButtonGC", &fBlueButtonGC);
      R__insp.Inspect(R__cl, R__parent, "fFocusList", &fFocusList);
      fFocusList.ShowMembers(R__insp, strcat(R__parent,"fFocusList.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDataFileInfo", (void*)&fDataFileInfo);
      ::ROOT::GenericShowMembers("TGFileInfo", (void*)&fDataFileInfo, R__insp, strcat(R__parent,"fDataFileInfo."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fServerName", &fServerName);
      fServerName.ShowMembers(R__insp, strcat(R__parent,"fServerName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fServerPort", &fServerPort);
      R__insp.Inspect(R__cl, R__parent, "fServerProg", &fServerProg);
      fServerProg.ShowMembers(R__insp, strcat(R__parent,"fServerProg.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fKeyBindings", &fKeyBindings);
      fKeyBindings.ShowMembers(R__insp, strcat(R__parent,"fKeyBindings.")); R__parent[R__ncp] = 0;
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_DDAControlPanel(void *p) {
      delete ((::DDAControlPanel*)p);
   }
   static void deleteArray_DDAControlPanel(void *p) {
      delete [] ((::DDAControlPanel*)p);
   }
   static void destruct_DDAControlPanel(void *p) {
      typedef ::DDAControlPanel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DDAControlPanel

/********************************************************
* snake-pgm/src/G__DDAControlDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__DDAControlDict();

extern "C" void G__set_cpp_environmentG__DDAControlDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("snake-pgm/inc/DDAControlPanel.h");
  G__cpp_reset_tagtableG__DDAControlDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__DDAControlDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DDAControlPanel */
static int G__G__DDAControlDict_454_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DDAControlPanel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DDAControlPanel(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) DDAControlPanel(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->OpenScanFile((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->OpenScanFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->InitializeValues((TSnkDDA0816*) G__int(libp->para[0]), (ESnkScanMode) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->UpdateValues((TSnkDDA0816*) G__int(libp->para[0]), (ESnkScanMode) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->UpdateCalibration((TSnkDDA0816*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->UpdateScanLimits((TSnkDDA0816*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->ResetOffset((TSnkDDA0816*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->ResetStopPos((TSnkDDA0816*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->DDA2Gui((TSnkDDA0816*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->Gui2DDA((TSnkDDA0816*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((DDAControlPanel*) G__getstructoffset())->Gui2DDA((TSnkDDA0816*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DDAControlPanel*) G__getstructoffset())->EntryChanged((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DDAControlPanel*) G__getstructoffset())->ButtonPressed((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DDAControlPanel*) G__getstructoffset())->SetScanMode((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DDAControlPanel*) G__getstructoffset())->PerformAction((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DDAControlPanel*) G__getstructoffset())->Activate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DDAControlPanel*) G__getstructoffset())->KeyPressed((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DDAControlPanel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DDAControlPanel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DDAControlPanel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DDAControlPanel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DDAControlPanel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DDAControlPanel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DDAControlPanel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DDAControlPanel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DDAControlDict_454_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DDAControlPanel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DDAControlPanel G__TDDAControlPanel;
static int G__G__DDAControlDict_454_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DDAControlPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DDAControlPanel*) (soff+(sizeof(DDAControlPanel)*i)))->~G__TDDAControlPanel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DDAControlPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DDAControlPanel*) (soff))->~G__TDDAControlPanel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DDAControlPanel */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__DDAControlDict {
 public:
  G__Sizep2memfuncG__DDAControlDict(): p(&G__Sizep2memfuncG__DDAControlDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__DDAControlDict::*p)();
};

size_t G__get_sizep2memfuncG__DDAControlDict()
{
  G__Sizep2memfuncG__DDAControlDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__DDAControlDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel))) {
     DDAControlPanel *G__Lderived;
     G__Lderived=(DDAControlPanel*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel),G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel),G__get_linked_tagnum(&G__G__DDAControlDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel),G__get_linked_tagnum(&G__G__DDAControlDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel),G__get_linked_tagnum(&G__G__DDAControlDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel),G__get_linked_tagnum(&G__G__DDAControlDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel),G__get_linked_tagnum(&G__G__DDAControlDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel),G__get_linked_tagnum(&G__G__DDAControlDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__DDAControlDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DDAControlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DDAControlPanel */
static void G__setup_memvarDDAControlPanel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel));
   { DDAControlPanel *p; p=(DDAControlPanel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TList),-1,-1,2,"fHeap=",0,"list of objects created on heap");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMenuBar),-1,-1,2,"fMenuBar=",0,"main menu bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGPopupMenu),-1,-1,2,"fMenuFile=",0,"pulldown menu: file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGPopupMenu),-1,-1,2,"fMenuSettings=",0,"pulldown menu: settings");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGPopupMenu),-1,-1,2,"fMenuServer=",0,"pulldown menu: server");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGPopupMenu),-1,-1,2,"fMenuHelp=",0,"pulldown menu: help");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGHorizontalFrame),-1,-1,2,"fCFrame=",0,"control frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbPictureButtonGroup),-1,-1,2,"fFButtons=",0,"file buttons: open / save");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbTextButtonGroup),-1,-1,2,"fCbuttons=",0,"control buttons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGGroupFrame),-1,-1,2,"fSFrame=",0,"scan period /cycles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fScanPeriod=",0,"...");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fCycles=",0,"...");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGGroupFrame),-1,-1,2,"fFFrame=",0,"file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbFileEntry),-1,-1,2,"fDataFile=",0,"...");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbRadioButtonGroup),-1,-1,2,"fSubdevs=",0,"radiobuttons: modules");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbRadioButtonGroup),-1,-1,2,"fScanModes=",0,"radiobuttons: scan modes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGVerticalFrame),-1,-1,2,"fHFrame=",0,"frame to store channel settings for X and Y");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGGroupFrame),-1,-1,2,"fCalFrame=",0,"calibration");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGHorizontalFrame),-1,-1,2,"fCRow1Frame=",0,"entries in row 1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGHorizontalFrame),-1,-1,2,"fCRow2Frame=",0,"entries in row 2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fChargeState=",0,"entry: charge number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fEnergy=",0,"entry: energy");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fCalib[2]=",0,"entry: calibration");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fVoltage[2]=",0,"entry: max voltage");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fStepWidth[2]=",0,"entry: step width");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fRange[2]=",0,"entry: range");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGGroupFrame),-1,-1,2,"fXYFrame[2]=",0,"X and Y frames");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbRadioButtonGroup),-1,-1,2,"fScanProfiles[2]=",0,"radiobuttons: scan profiles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGGroupFrame),-1,-1,2,"fDistFrame[2]=",0,"distance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGGroupFrame),-1,-1,2,"fStepFrame[2]=",0,"steps");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGGroupFrame),-1,-1,2,"fStopPosFrame[2]=",0,"stop position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbNamedX),-1,-1,2,"fOffsetZeroButton[2]=",0,"zero buttons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fOffsetD[2]=",0,"offset distance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fOffsetS[2]=",0,"... steps");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fAmplitudeD[2]=",0,"amplitude distance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fAmplitudeS[2]=",0,"... steps");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbNamedX),-1,-1,2,"fStopZeroButton[2]=",0,"zero buttons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fStopPosS[2]=",0,"stop position distance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fStopPosD[2]=",0,"... steps");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fNofPixels[2]=",0,"entry: scan size");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fScanLimitsD[2]=",0,"entry: actual scan limits (distance)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fScanLimitsS[2]=",0,"... (steps)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGGroupFrame),-1,-1,2,"fFQFrame=",0,"frame to store frequencies & scaledowns");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbRadioButtonList),-1,-1,2,"fPreScales=",0,"radiobuttons: prescaler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGHorizontalFrame),-1,-1,2,"fSDFrame=",0,"frame to store scaledowns");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fPacerClock=",0,"entry: pacer clock");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbRadioButtonList),-1,-1,2,"fSoftScale=",0,"radiobuttons: soft scale");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fScaleValue=",0,"entry: scale value");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLabelEntry),-1,-1,2,"fAmplYScale=",0,"scaled Y amplitude");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbLofNamedX),-1,-1,2,"fLofScanProfiles[2]=",0,"list of scan profiles");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbLofNamedX),-1,-1,2,"fLofSubdevs=",0,"modules");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbLofNamedX),-1,-1,2,"fLofPreScales=",0,"prescaler values");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbLofNamedX),-1,-1,2,"fLofScanModes=",0,"scan modes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbLofNamedX),-1,-1,2,"fLofControlButtons=",0,"list of control buttons");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbLofNamedX),-1,-1,2,"fLofSoftScaleButtons=",0,"list of softscale buttons");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TMrbLofNamedX),-1,-1,2,"fLofFileButtons=",0,"list of file buttons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLayout),-1,-1,2,"fFrameGC=",0,"layout descriptors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLayout),-1,-1,2,"fLabelGC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLayout),-1,-1,2,"fWhiteEntryGC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLayout),-1,-1,2,"fYellowEntryGC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLayout),-1,-1,2,"fGrayButtonGC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLayout),-1,-1,2,"fBlueButtonGC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbFocusList),-1,-1,2,"fFocusList=",0,"focus handling");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGFileInfo),-1,-1,2,"fDataFileInfo=",0,"data file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TString),-1,-1,2,"fServerName=",0,"server name");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fServerPort=",0,"... port");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TString),-1,-1,2,"fServerProg=",0,"... program");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TGMrbLofKeyBindings),-1,-1,2,"fKeyBindings=",0,"key bindings");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DDAControlDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__DDAControlDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDDAControlPanel(void) {
   /* DDAControlPanel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel));
   G__memfunc_setup("DDAControlPanel",1434,G__G__DDAControlDict_454_0_1, 105, G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 10 - - h - 'UInt_t' 0 - - "
"h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenScanFile",1175,G__G__DDAControlDict_454_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 '0' File", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__G__DDAControlDict_454_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "reset to defaults", (void*) NULL, 0);
   G__memfunc_setup("InitializeValues",1666,G__G__DDAControlDict_454_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TSnkDDA0816' - 0 - DDA i 'ESnkScanMode' - 0 - Mode", "initialize values according to scan mode", (void*) NULL, 0);
   G__memfunc_setup("UpdateValues",1235,G__G__DDAControlDict_454_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TSnkDDA0816' - 0 - DDA i 'ESnkScanMode' - 0 - Mode", "update values after check", (void*) NULL, 0);
   G__memfunc_setup("UpdateCalibration",1739,G__G__DDAControlDict_454_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TSnkDDA0816' - 0 - DDA", "update calibration data", (void*) NULL, 0);
   G__memfunc_setup("UpdateScanLimits",1626,G__G__DDAControlDict_454_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TSnkDDA0816' - 0 - DDA", "update range", (void*) NULL, 0);
   G__memfunc_setup("ResetOffset",1130,G__G__DDAControlDict_454_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TSnkDDA0816' - 0 - DDA i - 'Int_t' 0 - Channel", "rest offset", (void*) NULL, 0);
   G__memfunc_setup("ResetStopPos",1243,G__G__DDAControlDict_454_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TSnkDDA0816' - 0 - DDA i - 'Int_t' 0 - Channel", "rest stop position", (void*) NULL, 0);
   G__memfunc_setup("DDA2Gui",544,G__G__DDAControlDict_454_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TSnkDDA0816' - 0 - -", "set GUI values from DDA0816 object", (void*) NULL, 0);
   G__memfunc_setup("Gui2DDA",544,G__G__DDAControlDict_454_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TSnkDDA0816' - 0 - - g - 'Bool_t' 0 'kFALSE' SaveFlag", "set DDA values from GUI", (void*) NULL, 0);
   G__memfunc_setup("HandleKey",885,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - Event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EntryChanged",1212,G__G__DDAControlDict_454_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - FrameId i - 'Int_t' 0 - Selection", "slot methods", (void*) NULL, 0);
   G__memfunc_setup("ButtonPressed",1362,G__G__DDAControlDict_454_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - FrameId i - 'Int_t' 0 - Selection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScanMode",1078,G__G__DDAControlDict_454_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - FrameId i - 'Int_t' 0 - Selection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PerformAction",1337,G__G__DDAControlDict_454_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Action", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Activate",817,G__G__DDAControlDict_454_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Selection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KeyPressed",1023,G__G__DDAControlDict_454_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - FrameId i - 'Int_t' 0 - Action", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenDDAFile",987,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - 'Char_t' 10 - File", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntryEnabled",1513,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TGMrbLabelEntry' - 0 - Entry C - 'Char_t' 10 '0' Value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntryDisabled",1622,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TGMrbLabelEntry' - 0 - Entry C - 'Char_t' 10 '0' Value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntrySlave",1337,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TGMrbLabelEntry' - 0 - Entry C - 'Char_t' 10 '0' Value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileEnabled",1367,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TGMrbFileEntry' - 0 - Entry C - 'Char_t' 10 '0' Value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileDisabled",1476,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TGMrbFileEntry' - 0 - Entry C - 'Char_t' 10 '0' Value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__DDAControlDict_454_0_26, 85, G__get_linked_tagnum(&G__G__DDAControlDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&DDAControlPanel::Class), 0);
   G__memfunc_setup("Class_Name",982,G__G__DDAControlDict_454_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&DDAControlPanel::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__G__DDAControlDict_454_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&DDAControlPanel::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__G__DDAControlDict_454_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&DDAControlPanel::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__DDAControlDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__DDAControlDict_454_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__DDAControlDict_454_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&DDAControlPanel::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__DDAControlDict_454_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&DDAControlPanel::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__DDAControlDict_454_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&DDAControlPanel::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__DDAControlDict_454_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&DDAControlPanel::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~DDAControlPanel", 1560, G__G__DDAControlDict_454_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__DDAControlDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__DDAControlDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__DDAControlDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__DDAControlDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TMrbNamedX = { "TMrbNamedX" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TMrbLofNamedX = { "TMrbLofNamedX" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbLayout = { "TGMrbLayout" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbRadioButtonList = { "TGMrbRadioButtonList" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbRadioButtonGroup = { "TGMrbRadioButtonGroup" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbTextButtonGroup = { "TGMrbTextButtonGroup" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbPictureButtonGroup = { "TGMrbPictureButtonGroup" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbFocusList = { "TGMrbFocusList" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbLabelEntry = { "TGMrbLabelEntry" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGFileInfo = { "TGFileInfo" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbFileEntry = { "TGMrbFileEntry" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TGMrbLofKeyBindings = { "TGMrbLofKeyBindings" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_ESnkScanMode = { "ESnkScanMode" , 101 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_TSnkDDA0816 = { "TSnkDDA0816" , 99 , -1 };
G__linked_taginfo G__G__DDAControlDictLN_DDAControlPanel = { "DDAControlPanel" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__DDAControlDict() {
  G__G__DDAControlDictLN_TClass.tagnum = -1 ;
  G__G__DDAControlDictLN_TBuffer.tagnum = -1 ;
  G__G__DDAControlDictLN_TMemberInspector.tagnum = -1 ;
  G__G__DDAControlDictLN_TObject.tagnum = -1 ;
  G__G__DDAControlDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__DDAControlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__DDAControlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__DDAControlDictLN_TList.tagnum = -1 ;
  G__G__DDAControlDictLN_TString.tagnum = -1 ;
  G__G__DDAControlDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__DDAControlDictLN_TQObject.tagnum = -1 ;
  G__G__DDAControlDictLN_Event_t.tagnum = -1 ;
  G__G__DDAControlDictLN_TGObject.tagnum = -1 ;
  G__G__DDAControlDictLN_TGWindow.tagnum = -1 ;
  G__G__DDAControlDictLN_TGFrame.tagnum = -1 ;
  G__G__DDAControlDictLN_TGCompositeFrame.tagnum = -1 ;
  G__G__DDAControlDictLN_TGVerticalFrame.tagnum = -1 ;
  G__G__DDAControlDictLN_TGHorizontalFrame.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMainFrame.tagnum = -1 ;
  G__G__DDAControlDictLN_TGGroupFrame.tagnum = -1 ;
  G__G__DDAControlDictLN_TGPopupMenu.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMenuBar.tagnum = -1 ;
  G__G__DDAControlDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__DDAControlDictLN_TMrbNamedX.tagnum = -1 ;
  G__G__DDAControlDictLN_TMrbLofNamedX.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbLayout.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbRadioButtonList.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbRadioButtonGroup.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbTextButtonGroup.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbPictureButtonGroup.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbFocusList.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbLabelEntry.tagnum = -1 ;
  G__G__DDAControlDictLN_TGFileInfo.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbFileEntry.tagnum = -1 ;
  G__G__DDAControlDictLN_TGMrbLofKeyBindings.tagnum = -1 ;
  G__G__DDAControlDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__DDAControlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__DDAControlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__DDAControlDictLN_ESnkScanMode.tagnum = -1 ;
  G__G__DDAControlDictLN_TSnkDDA0816.tagnum = -1 ;
  G__G__DDAControlDictLN_DDAControlPanel.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__DDAControlDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TList);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TString);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_Event_t);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGGroupFrame);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMenuBar);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TMrbNamedX);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TMrbLofNamedX);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbLayout);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbRadioButtonList);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbRadioButtonGroup);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbTextButtonGroup);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbPictureButtonGroup);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbFocusList);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbLabelEntry);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGFileInfo);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbFileEntry);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TGMrbLofKeyBindings);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_ESnkScanMode);
   G__get_linked_tagnum_fwd(&G__G__DDAControlDictLN_TSnkDDA0816);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__DDAControlDictLN_DDAControlPanel),sizeof(DDAControlPanel),-1,62464,"[SNAKE] Control panel",G__setup_memvarDDAControlPanel,G__setup_memfuncDDAControlPanel);
}
extern "C" void G__cpp_setupG__DDAControlDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__DDAControlDict()");
  G__set_cpp_environmentG__DDAControlDict();
  G__cpp_setup_tagtableG__DDAControlDict();

  G__cpp_setup_inheritanceG__DDAControlDict();

  G__cpp_setup_typetableG__DDAControlDict();

  G__cpp_setup_memvarG__DDAControlDict();

  G__cpp_setup_memfuncG__DDAControlDict();
  G__cpp_setup_globalG__DDAControlDict();
  G__cpp_setup_funcG__DDAControlDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__DDAControlDict();
  return;
}
class G__cpp_setup_initG__DDAControlDict {
  public:
    G__cpp_setup_initG__DDAControlDict() { G__add_setup_func("G__DDAControlDict",(G__incsetup)(&G__cpp_setupG__DDAControlDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__DDAControlDict() { G__remove_setup_func("G__DDAControlDict"); }
};
G__cpp_setup_initG__DDAControlDict G__cpp_setup_initializerG__DDAControlDict;

