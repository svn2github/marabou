/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CAMACRPC_H_RPCGEN
#define _CAMACRPC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define PROGRPC 400001

struct camacadd_lcl {
	int n_path;
	char n_cnaf[4];
};
typedef struct camacadd_lcl camacadd_lcl;

struct ctrlblk_lcl {
	u_int rpt_count;
	u_int tally;
	u_int lam_id;
	u_int mode;
};
typedef struct ctrlblk_lcl ctrlblk_lcl;

struct act_in {
	struct camacadd_lcl *ext;
	int data;
};
typedef struct act_in act_in;

struct act_out {
	int errno;
	int status;
	int data;
};
typedef struct act_out act_out;

struct addscan_in {
	struct {
		u_int extarr_len;
		struct camacadd_lcl *extarr_val;
	} extarr;
	struct ctrlblk_lcl *cb;
	struct {
		u_int data_len;
		int *data_val;
	} data;
};
typedef struct addscan_in addscan_in;

struct addscan_out {
	int errno;
	int status;
	struct ctrlblk_lcl *cb;
	struct {
		u_int data_len;
		int *data_val;
	} data;
};
typedef struct addscan_out addscan_out;

struct onl_in {
	struct camacadd_lcl *ext;
};
typedef struct onl_in onl_in;

struct onl_out {
	int errno;
	int status;
};
typedef struct onl_out onl_out;

struct init_in {
	struct camacadd_lcl *ext;
};
typedef struct init_in init_in;

struct init_out {
	int errno;
	int status;
};
typedef struct init_out init_out;

struct open_in {
	char *dev;
	int unit;
};
typedef struct open_in open_in;

struct open_out {
	int errno;
	int path;
};
typedef struct open_out open_out;

struct blk_in {
	struct camacadd_lcl *ext;
	struct ctrlblk_lcl *cb;
	struct {
		u_int data_len;
		int *data_val;
	} data;
};
typedef struct blk_in blk_in;

struct blk_out {
	int errno;
	int status;
	struct ctrlblk_lcl *cb;
	struct {
		u_int data_len;
		int *data_val;
	} data;
};
typedef struct blk_out blk_out;

struct mact_in {
	struct {
		u_int ext_len;
		struct camacadd_lcl *ext_val;
	} ext;
	struct ctrlblk_lcl *cb;
	struct {
		u_int func_len;
		int *func_val;
	} func;
	struct {
		u_int data_len;
		int *data_val;
	} data;
	struct {
		u_int q_res_len;
		int *q_res_val;
	} q_res;
};
typedef struct mact_in mact_in;

struct mact_out {
	int errno;
	int status;
	struct ctrlblk_lcl *cb;
	struct {
		u_int data_len;
		int *data_val;
	} data;
	struct {
		u_int q_res_len;
		int *q_res_val;
	} q_res;
};
typedef struct mact_out mact_out;

#define PROCPROG PROGRPC
#define PROCVERS 2

#if defined(__STDC__) || defined(__cplusplus)
#define _R_CAMAC_OPEN 1
extern  struct open_out * _r_camac_open_2(struct open_in *, CLIENT *);
extern  struct open_out * _r_camac_open_2_svc(struct open_in *, struct svc_req *);
#define _R_CAMAC_INIT 2
extern  struct init_out * _r_camac_init_2(struct init_in *, CLIENT *);
extern  struct init_out * _r_camac_init_2_svc(struct init_in *, struct svc_req *);
#define _R_CAMAC_ONL 3
extern  struct onl_out * _r_camac_onl_2(struct onl_in *, CLIENT *);
extern  struct onl_out * _r_camac_onl_2_svc(struct onl_in *, struct svc_req *);
#define _R_CAMAC_ACT 4
extern  struct act_out * _r_camac_act_2(struct act_in *, CLIENT *);
extern  struct act_out * _r_camac_act_2_svc(struct act_in *, struct svc_req *);
#define _R_CAMAC_ADDSCAN 5
extern  struct addscan_out * _r_camac_addscan_2(struct addscan_in *, CLIENT *);
extern  struct addscan_out * _r_camac_addscan_2_svc(struct addscan_in *, struct svc_req *);
#define _R_CAMAC_BLK 6
extern  struct blk_out * _r_camac_blk_2(struct blk_in *, CLIENT *);
extern  struct blk_out * _r_camac_blk_2_svc(struct blk_in *, struct svc_req *);
#define _R_CAMAC_MACT 7
extern  struct mact_out * _r_camac_mact_2(struct mact_in *, CLIENT *);
extern  struct mact_out * _r_camac_mact_2_svc(struct mact_in *, struct svc_req *);
extern int procprog_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define _R_CAMAC_OPEN 1
extern  struct open_out * _r_camac_open_2();
extern  struct open_out * _r_camac_open_2_svc();
#define _R_CAMAC_INIT 2
extern  struct init_out * _r_camac_init_2();
extern  struct init_out * _r_camac_init_2_svc();
#define _R_CAMAC_ONL 3
extern  struct onl_out * _r_camac_onl_2();
extern  struct onl_out * _r_camac_onl_2_svc();
#define _R_CAMAC_ACT 4
extern  struct act_out * _r_camac_act_2();
extern  struct act_out * _r_camac_act_2_svc();
#define _R_CAMAC_ADDSCAN 5
extern  struct addscan_out * _r_camac_addscan_2();
extern  struct addscan_out * _r_camac_addscan_2_svc();
#define _R_CAMAC_BLK 6
extern  struct blk_out * _r_camac_blk_2();
extern  struct blk_out * _r_camac_blk_2_svc();
#define _R_CAMAC_MACT 7
extern  struct mact_out * _r_camac_mact_2();
extern  struct mact_out * _r_camac_mact_2_svc();
extern int procprog_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_camacadd_lcl (XDR *, camacadd_lcl*);
extern  bool_t xdr_ctrlblk_lcl (XDR *, ctrlblk_lcl*);
extern  bool_t xdr_act_in (XDR *, act_in*);
extern  bool_t xdr_act_out (XDR *, act_out*);
extern  bool_t xdr_addscan_in (XDR *, addscan_in*);
extern  bool_t xdr_addscan_out (XDR *, addscan_out*);
extern  bool_t xdr_onl_in (XDR *, onl_in*);
extern  bool_t xdr_onl_out (XDR *, onl_out*);
extern  bool_t xdr_init_in (XDR *, init_in*);
extern  bool_t xdr_init_out (XDR *, init_out*);
extern  bool_t xdr_open_in (XDR *, open_in*);
extern  bool_t xdr_open_out (XDR *, open_out*);
extern  bool_t xdr_blk_in (XDR *, blk_in*);
extern  bool_t xdr_blk_out (XDR *, blk_out*);
extern  bool_t xdr_mact_in (XDR *, mact_in*);
extern  bool_t xdr_mact_out (XDR *, mact_out*);

#else /* K&R C */
extern bool_t xdr_camacadd_lcl ();
extern bool_t xdr_ctrlblk_lcl ();
extern bool_t xdr_act_in ();
extern bool_t xdr_act_out ();
extern bool_t xdr_addscan_in ();
extern bool_t xdr_addscan_out ();
extern bool_t xdr_onl_in ();
extern bool_t xdr_onl_out ();
extern bool_t xdr_init_in ();
extern bool_t xdr_init_out ();
extern bool_t xdr_open_in ();
extern bool_t xdr_open_out ();
extern bool_t xdr_blk_in ();
extern bool_t xdr_blk_out ();
extern bool_t xdr_mact_in ();
extern bool_t xdr_mact_out ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CAMACRPC_H_RPCGEN */
