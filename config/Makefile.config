# 
# Begin copy from roots Makefile.config
#
# The macro below strips off the source dir path to make a relative path name
stripsrc = $(subst $(ROOT_SRCDIR)/,,$(1))

# This macro creates the list of pcm files to be passed to a library
# dictionary generation step, something like
#    $(call pcm_rootcling_opt,$(TREELIBDEPM))
pcm_rootcling_opt =  $(addprefix -m ,$(subst .$(SOEXT),_rdict.pcm,$1))

# This macro returns the name of the pcm corresponding to a library
#    $(call pcmname,$(TREELIB))
pcmname = $(subst .$(SOEXT),_rdict.pcm,$1)

# This macro returns the list of pcm's that are needed for a package
#    $(call pcmdep,TREE)# 
# End copy from roots Makefile.config
#

# the argument is the upper case name of the library (see the Module.mk)
pcmdep = $(subst .$(SOEXT),_rdict.pcm,$($1LIBDEPM))

# This macro builds the rootmap name starting from the library full path
#    $(call rmfName, TREELIB)
# the argument is the upper case name of the library (see the Module.mk)
rmfName = $(dir $1)$(subst .$(SOEXT),.rootmap,$(notdir $1))

# This macro returns the arguments to be passed to rootcling to properly
# generate the rootmap file
#    $(call rootmapModule, TREELIB)
# the argument is the upper case name of the library (see the Module.mk)
rootmapModule = -rml $(notdir $1) -rmf $(call rmfName, $1)

# This macro returns the argument to be passed to rootcling to
# properly setup the pcm
#    $(call dictModule,TREE)
# the argument is the upper case name of the library (see the Module.mk)
dictModule = $(call rootmapModule, $($1LIB)) $(call pcm_rootcling_opt, $($1LIBDEPM))

# This macro is used to setup the rule where the pcm depends on the
# dictionary and the library's dependent pcm's
#    $(call pcmrule,TREE)
# the argument is the upper case name of the library (see the Module.mk)
pcmrule = $(call pcmname, $($1LIB)): $(call pcmdep, $1) $($1DS)

noop = @true # "Do nothing really, this is just to make the rule stick"
# 
# End copy from roots Makefile.config
#
ROOTCLINGSTAGE2:= rootcling -rootbuild
ARCH           := linuxx8664gcc
USECONFIG      := FALSE
EXPLICITLINK   := yes
EXTRA_CFLAGS   := -Iinclude
EXTRA_CXXFLAGS := -Iinclude
EXTRA_LDFLAGS  :=     
BINDIR         := $$MARABOU_INSTALL_PATH/bin
LIBDIR         := $$MARABOU_INSTALL_PATH/lib
OBJDIR         := $$MARABOU_INSTALL_PATH/obj
INCDIR         := $$MARABOU_INSTALL_PATH/include
DATADIR		   := $$MARABOU_INSTALL_PATH/data
MACRODIR  	   := $$MARABOU_INSTALL_PATH/macros
SCRIPTDIR  	   := $$MARABOU_INSTALL_PATH/scripts
SRCDIR 		   := $$MARABOU_INSTALL_PATH/src
ICONPATH  	   := $$MARABOU_INSTALL_PATH/icons
DOCDIR 		   := $$MARABOU_INSTALL_PATH/doc
TESTDIR		   := $$MARABOU_INSTALL_PATH/test
TEMPLDIR 		:= $$MARABOU_INSTALL_PATH/templates
TUTDIR 		   := $$MARABOU_INSTALL_PATH/tutorials
SOUNDPATH 		:= $$MARABOU_INSTALL_PATH/sounds
SCRIPTDIR 		:= $$MARABOU_INSTALL_PATH/scripts
DOCHPRDIR 		:= $$MARABOU_INSTALL_PATH/doc/hpr
HTMLURL        := www.bl.physik.uni-muenchen.de
DISTURL        := www.bl.physik.uni-muenchen.de
## INSTALL		   := rsync -azC
INSTALL		   := cp -dpR            
## dont copy .svn dirs
INSTALLDATA    := rsync -rloDzC 
## INSTALLDATA    := cp -dpR            
INSTALLDIR	   := mkdir -p
UPLOADHTML     := ncftpput -m -R -u rg $(HTMLURL) /marabou html
UPLOADDIST     := ncftpput -m -u rg $(DISTURL) /marabou
