#ifndef __DgfCommonIndices_h__
#define __DgfCommonIndices_h__

//_________________________________________________[C++ CLASS DEFINITION FILE]
//////////////////////////////////////////////////////////////////////////////
// Name:           DgfCommonIndices.h
// Purpose:        Index declarations common to analysis and readout
// Description:    Defines a set of indices which should be used in analysis
//                 as well as readout code to guarantee coherent addresses
//
// Author:         Miniball
// Revision:         
// Date:           Fri Sep 12 09:04:24 2003
// URL:            
// Keywords:       
//////////////////////////////////////////////////////////////////////////////

enum EMrbSevt_10_12	{	kMrbSevt_10_12_B_Header 		=	(0x1 << 15),
						kMrbSevt_10_12_M_ModuleNumber	=	0xFF,
						kMrbSevt_10_12_M_ModuleId		=	0x7F,
						kMrbSevt_10_12_SH_ModuleId		=	8
					};

enum EMrbTriggerId	{
						kMrbTriggerReadout = 1,		// event readout, trigger 1
						kMrbTriggerStartAcquisition = 14,	// start acquisition, trigger 14
						kMrbTriggerStopAcquisition = 15 	// stop acquisition, trigger 15
					};

enum EMrbSevtSerial {
 						kMrbSevtClu1 = 1,				// subevent clu1, unique serial number
 						kMrbSevtClu2 = 2,				// subevent clu2, unique serial number
 						kMrbSevtClu3 = 3,				// subevent clu3, unique serial number
 						kMrbSevtClu4 = 4,				// subevent clu4, unique serial number
 						kMrbSevtClu5 = 5,				// subevent clu5, unique serial number
 						kMrbSevtClu6 = 6,				// subevent clu6, unique serial number
 						kMrbSevtClu7 = 7,				// subevent clu7, unique serial number
 						kMrbSevtClu8 = 8,				// subevent clu8, unique serial number
 						kMrbSevtClu9 = 9,				// subevent clu9, unique serial number
 						kMrbSevtClu10 = 10,				// subevent clu10, unique serial number
 						kMrbSevtCdf1 = 11,				// subevent cdf1, unique serial number
 						kMrbSevtCdf2 = 12,				// subevent cdf2, unique serial number
 						kMrbSevtCdb1 = 13,				// subevent cdb1, unique serial number
 						kMrbSevtCdb2 = 14,				// subevent cdb2, unique serial number
 						kMrbSevtCdb3 = 15,				// subevent cdb3, unique serial number
 						kMrbSevtCde = 16,				// subevent cde, unique serial number
 						kMrbSevtCdt1 = 17,				// subevent cdt1, unique serial number
 						kMrbSevtCdt2 = 18,				// subevent cdt2, unique serial number
 						kMrbSevtScData = 19,				// subevent scData, unique serial number
 						kMrbSevtPuData = 20,				// subevent puData, unique serial number
 						kMrbSevtDsca1 = 21,				// subevent dsca1, unique serial number
 						kMrbSevtDsca2 = 22,				// subevent dsca2, unique serial number
 						kMrbSevtDsca3 = 23,				// subevent dsca3, unique serial number
						kMrbSevtDeadTime = 998, 			// dead time, serial=998
						kMrbSevtTimeStamp = 999, 			// time stamp, serial=999
						kMrbSevtDummy = 888 	 			// dummy subevent created by MBS internally, serial=888
					};

enum EMrbSevtBits	 {
 						kMrbSevtBitClu1 = 0x1,		// subevent clu1
 						kMrbSevtBitClu2 = 0x2,		// subevent clu2
 						kMrbSevtBitClu3 = 0x4,		// subevent clu3
 						kMrbSevtBitClu4 = 0x8,		// subevent clu4
 						kMrbSevtBitClu5 = 0x10,		// subevent clu5
 						kMrbSevtBitClu6 = 0x20,		// subevent clu6
 						kMrbSevtBitClu7 = 0x40,		// subevent clu7
 						kMrbSevtBitClu8 = 0x80,		// subevent clu8
 						kMrbSevtBitClu9 = 0x100,		// subevent clu9
 						kMrbSevtBitClu10 = 0x200,		// subevent clu10
 						kMrbSevtBitCdf1 = 0x400,		// subevent cdf1
 						kMrbSevtBitCdf2 = 0x800,		// subevent cdf2
 						kMrbSevtBitCdb1 = 0x1000,		// subevent cdb1
 						kMrbSevtBitCdb2 = 0x2000,		// subevent cdb2
 						kMrbSevtBitCdb3 = 0x4000,		// subevent cdb3
 						kMrbSevtBitCde = 0x8000,		// subevent cde
 						kMrbSevtBitCdt1 = 0x10000,		// subevent cdt1
 						kMrbSevtBitCdt2 = 0x20000,		// subevent cdt2
 						kMrbSevtBitScData = 0x40000,		// subevent scData
 						kMrbSevtBitPuData = 0x80000,		// subevent puData
 						kMrbSevtBitDsca1 = 0x100000,		// subevent dsca1
 						kMrbSevtBitDsca2 = 0x200000,		// subevent dsca2
 						kMrbSevtBitDsca3 = 0x400000,		// subevent dsca3
					};

enum EMrbSevtIndices 	{
							kE11c = 0,				// subevent clu1, serial 1
							kE111 = 1,
							kE112 = 2,
							kE11x = 3,
							kE123 = 4,
							kE124 = 5,
							kE125 = 6,
							kE126 = 7,
							kE13c = 8,
							kE131 = 9,
							kE132 = 10,
							kE13x = 11,
							kE143 = 12,
							kE144 = 13,
							kE145 = 14,
							kE146 = 15,
							kE15c = 16,
							kE151 = 17,
							kE152 = 18,
							kE15x = 19,
							kE163 = 20,
							kE164 = 21,
							kE165 = 22,
							kE166 = 23,
							kE21c = 0,				// subevent clu2, serial 2
							kE211 = 1,
							kE212 = 2,
							kE21x = 3,
							kE223 = 4,
							kE224 = 5,
							kE225 = 6,
							kE226 = 7,
							kE23c = 8,
							kE231 = 9,
							kE232 = 10,
							kE23x = 11,
							kE243 = 12,
							kE244 = 13,
							kE245 = 14,
							kE246 = 15,
							kE25c = 16,
							kE251 = 17,
							kE252 = 18,
							kE25x = 19,
							kE263 = 20,
							kE264 = 21,
							kE265 = 22,
							kE266 = 23,
							kE31c = 0,				// subevent clu3, serial 3
							kE311 = 1,
							kE312 = 2,
							kE31x = 3,
							kE323 = 4,
							kE324 = 5,
							kE325 = 6,
							kE326 = 7,
							kE33c = 8,
							kE331 = 9,
							kE332 = 10,
							kE33x = 11,
							kE343 = 12,
							kE344 = 13,
							kE345 = 14,
							kE346 = 15,
							kE35c = 16,
							kE351 = 17,
							kE352 = 18,
							kE35x = 19,
							kE363 = 20,
							kE364 = 21,
							kE365 = 22,
							kE366 = 23,
							kE41c = 0,				// subevent clu4, serial 4
							kE411 = 1,
							kE412 = 2,
							kE41x = 3,
							kE423 = 4,
							kE424 = 5,
							kE425 = 6,
							kE426 = 7,
							kE43c = 8,
							kE431 = 9,
							kE432 = 10,
							kE43x = 11,
							kE443 = 12,
							kE444 = 13,
							kE445 = 14,
							kE446 = 15,
							kE45c = 16,
							kE451 = 17,
							kE452 = 18,
							kE45x = 19,
							kE463 = 20,
							kE464 = 21,
							kE465 = 22,
							kE466 = 23,
							kE51c = 0,				// subevent clu5, serial 5
							kE511 = 1,
							kE512 = 2,
							kE51x = 3,
							kE523 = 4,
							kE524 = 5,
							kE525 = 6,
							kE526 = 7,
							kE53c = 8,
							kE531 = 9,
							kE532 = 10,
							kE53x = 11,
							kE543 = 12,
							kE544 = 13,
							kE545 = 14,
							kE546 = 15,
							kE55c = 16,
							kE551 = 17,
							kE552 = 18,
							kE55x = 19,
							kE563 = 20,
							kE564 = 21,
							kE565 = 22,
							kE566 = 23,
							kE61c = 0,				// subevent clu6, serial 6
							kE611 = 1,
							kE612 = 2,
							kE61x = 3,
							kE623 = 4,
							kE624 = 5,
							kE625 = 6,
							kE626 = 7,
							kE63c = 8,
							kE631 = 9,
							kE632 = 10,
							kE63x = 11,
							kE643 = 12,
							kE644 = 13,
							kE645 = 14,
							kE646 = 15,
							kE65c = 16,
							kE651 = 17,
							kE652 = 18,
							kE65x = 19,
							kE663 = 20,
							kE664 = 21,
							kE665 = 22,
							kE666 = 23,
							kE71c = 0,				// subevent clu7, serial 7
							kE711 = 1,
							kE712 = 2,
							kE71x = 3,
							kE723 = 4,
							kE724 = 5,
							kE725 = 6,
							kE726 = 7,
							kE73c = 8,
							kE731 = 9,
							kE732 = 10,
							kE73x = 11,
							kE743 = 12,
							kE744 = 13,
							kE745 = 14,
							kE746 = 15,
							kE75c = 16,
							kE751 = 17,
							kE752 = 18,
							kE75x = 19,
							kE763 = 20,
							kE764 = 21,
							kE765 = 22,
							kE766 = 23,
							kE81c = 0,				// subevent clu8, serial 8
							kE811 = 1,
							kE812 = 2,
							kE81x = 3,
							kE823 = 4,
							kE824 = 5,
							kE825 = 6,
							kE826 = 7,
							kE83c = 8,
							kE831 = 9,
							kE832 = 10,
							kE83x = 11,
							kE843 = 12,
							kE844 = 13,
							kE845 = 14,
							kE846 = 15,
							kE85c = 16,
							kE851 = 17,
							kE852 = 18,
							kE85x = 19,
							kE863 = 20,
							kE864 = 21,
							kE865 = 22,
							kE866 = 23,
							kTs = 0,				// subevent clu9, serial 9
							kEbis = 1,
							kT1p = 2,
							kT2p = 3,
							kBd = 0,				// subevent clu10, serial 10
							kX2 = 1,
							kX3 = 2,
							kX4 = 3,
							kEcdf1 = 0,				// subevent cdf1, serial 11
							kEcdf2 = 1,
							kEcdf3 = 2,
							kEcdf4 = 3,
							kEcdf5 = 4,
							kEcdf6 = 5,
							kEcdf7 = 6,
							kEcdf8 = 7,
							kEcdf9 = 8,
							kEcdf10 = 9,
							kEcdf11 = 10,
							kEcdf12 = 11,
							kEcdf13 = 12,
							kEcdf14 = 13,
							kEcdf15 = 14,
							kEcdf16 = 15,
							kEcdf17 = 16,
							kEcdf18 = 17,
							kEcdf19 = 18,
							kEcdf20 = 19,
							kEcdf21 = 20,
							kEcdf22 = 21,
							kEcdf23 = 22,
							kEcdf24 = 23,
							kEcdf25 = 24,
							kEcdf26 = 25,
							kEcdf27 = 26,
							kEcdf28 = 27,
							kEcdf29 = 28,
							kEcdf30 = 29,
							kEcdf31 = 30,
							kEcdf32 = 31,
							kEcdf33 = 0,				// subevent cdf2, serial 12
							kEcdf34 = 1,
							kEcdf35 = 2,
							kEcdf36 = 3,
							kEcdf37 = 4,
							kEcdf38 = 5,
							kEcdf39 = 6,
							kEcdf40 = 7,
							kEcdf41 = 8,
							kEcdf42 = 9,
							kEcdf43 = 10,
							kEcdf44 = 11,
							kEcdf45 = 12,
							kEcdf46 = 13,
							kEcdf47 = 14,
							kEcdf48 = 15,
							kEcdf49 = 16,
							kEcdf50 = 17,
							kEcdf51 = 18,
							kEcdf52 = 19,
							kEcdf53 = 20,
							kEcdf54 = 21,
							kEcdf55 = 22,
							kEcdf56 = 23,
							kEcdf57 = 24,
							kEcdf58 = 25,
							kEcdf59 = 26,
							kEcdf60 = 27,
							kEcdf61 = 28,
							kEcdf62 = 29,
							kEcdf63 = 30,
							kEcdf64 = 31,
							kEcdb1 = 0,				// subevent cdb1, serial 13
							kEcdb2 = 1,
							kEcdb3 = 2,
							kEcdb4 = 3,
							kEcdb5 = 4,
							kEcdb6 = 5,
							kEcdb7 = 6,
							kEcdb8 = 7,
							kEcdb9 = 8,
							kEcdb10 = 9,
							kEcdb11 = 10,
							kEcdb12 = 11,
							kEcdb13 = 12,
							kEcdb14 = 13,
							kEcdb15 = 14,
							kEcdb16 = 15,
							kEcdb17 = 16,
							kEcdb18 = 17,
							kEcdb19 = 18,
							kEcdb20 = 19,
							kEcdb21 = 20,
							kEcdb22 = 21,
							kEcdb23 = 22,
							kEcdb24 = 23,
							kEcdb25 = 24,
							kEcdb26 = 25,
							kEcdb27 = 26,
							kEcdb28 = 27,
							kEcdb29 = 28,
							kEcdb30 = 29,
							kEcdb31 = 30,
							kEcdb32 = 31,
							kEcdb33 = 0,				// subevent cdb2, serial 14
							kEcdb34 = 1,
							kEcdb35 = 2,
							kEcdb36 = 3,
							kEcdb37 = 4,
							kEcdb38 = 5,
							kEcdb39 = 6,
							kEcdb40 = 7,
							kEcdb41 = 8,
							kEcdb42 = 9,
							kEcdb43 = 10,
							kEcdb44 = 11,
							kEcdb45 = 12,
							kEcdb46 = 13,
							kEcdb47 = 14,
							kEcdb48 = 15,
							kEcdb49 = 16,
							kEcdb50 = 17,
							kEcdb51 = 18,
							kEcdb52 = 19,
							kEcdb53 = 20,
							kEcdb54 = 21,
							kEcdb55 = 22,
							kEcdb56 = 23,
							kEcdb57 = 24,
							kEcdb58 = 25,
							kEcdb59 = 26,
							kEcdb60 = 27,
							kEcdb61 = 28,
							kEcdb62 = 29,
							kEcdb63 = 30,
							kEcdb64 = 31,
							kEcdb65 = 0,				// subevent cdb3, serial 15
							kEcdb66 = 1,
							kEcdb67 = 2,
							kEcdb68 = 3,
							kEcdb69 = 4,
							kEcdb70 = 5,
							kEcdb71 = 6,
							kEcdb72 = 7,
							kEcdb73 = 8,
							kEcdb74 = 9,
							kEcdb75 = 10,
							kEcdb76 = 11,
							kEcdb77 = 12,
							kEcdb78 = 13,
							kEcdb79 = 14,
							kEcdb80 = 15,
							kEcdb81 = 16,
							kEcdb82 = 17,
							kEcdb83 = 18,
							kEcdb84 = 19,
							kEcdb85 = 20,
							kEcdb86 = 21,
							kEcdb87 = 22,
							kEcdb88 = 23,
							kEcdb89 = 24,
							kEcdb90 = 25,
							kEcdb91 = 26,
							kEcdb92 = 27,
							kEcdb93 = 28,
							kEcdb94 = 29,
							kEcdb95 = 30,
							kEcdb96 = 31,
							kEcde1 = 0,				// subevent cde, serial 16
							kEcde2 = 1,
							kEcde3 = 2,
							kEcde4 = 3,
							kEcde5 = 4,
							kEcde6 = 5,
							kEcde7 = 6,
							kEcde8 = 7,
							kEcde9 = 8,
							kEcde10 = 9,
							kEcde11 = 10,
							kEcde12 = 11,
							kEcde13 = 12,
							kEcde14 = 13,
							kEcde15 = 14,
							kEcde16 = 15,
							kEcde17 = 16,
							kEcde18 = 17,
							kEcde19 = 18,
							kEcde20 = 19,
							kEcde21 = 20,
							kEcde22 = 21,
							kEcde23 = 22,
							kEcde24 = 23,
							kEcde25 = 24,
							kEcde26 = 25,
							kEcde27 = 26,
							kEcde28 = 27,
							kEcde29 = 28,
							kEcde30 = 29,
							kEcde31 = 30,
							kEcde32 = 31,
							kT1 = 0,				// subevent cdt1, serial 17
							kT2 = 1,
							kT3 = 2,
							kT4 = 3,
							kT5 = 4,
							kT6 = 5,
							kT7 = 6,
							kT8 = 7,
							kT9 = 8,
							kT10 = 9,
							kT11 = 10,
							kT12 = 11,
							kT13 = 12,
							kT14 = 13,
							kT15 = 14,
							kT16 = 15,
							kT17 = 16,
							kT18 = 17,
							kT19 = 18,
							kT20 = 19,
							kT21 = 20,
							kT22 = 21,
							kT23 = 22,
							kT24 = 23,
							kT25 = 24,
							kT26 = 25,
							kT27 = 26,
							kT28 = 27,
							kT29 = 28,
							kT30 = 29,
							kT31 = 30,
							kT32 = 31,
							kT33 = 0,				// subevent cdt2, serial 18
							kT34 = 1,
							kT35 = 2,
							kT36 = 3,
							kT37 = 4,
							kT38 = 5,
							kT39 = 6,
							kT40 = 7,
							kT41 = 8,
							kT42 = 9,
							kT43 = 10,
							kT44 = 11,
							kT45 = 12,
							kT46 = 13,
							kT47 = 14,
							kT48 = 15,
							kT49 = 16,
							kT50 = 17,
							kT51 = 18,
							kT52 = 19,
							kT53 = 20,
							kT54 = 21,
							kT55 = 22,
							kT56 = 23,
							kT57 = 24,
							kT58 = 25,
							kT59 = 26,
							kT60 = 27,
							kT61 = 28,
							kT62 = 29,
							kT63 = 30,
							kT64 = 31,
						};

enum EMrbModuleID {
						kMrbModIdDgf = 0x100010,			// type Dgf (Xia DGF-4C Digital Gamma Finder)
						kMrbModIdCaen_v785 = 0x4000D,			// type Caen_v785 (CAEN V785 ADC 32 x 12 bit)
						kMrbModIdCaen_V775 = 0x40015,			// type Caen_V775 (CAEN V775 TDC 32 x 12 bit)
						kMrbModIdSis_3801 = 0x1000019,			// type Sis_3801 (SIS 3801 scaler 32 x 32 bit)
						kMrbModIdSis_3600 = 0x1000018,			// type Sis_3600 (SIS 3600 pattern unit 32 bit)
					};

enum EMrbModuleSerial {
						kMrbModuleDgf11 = 1,			// module dgf11 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf12 = 2,			// module dgf12 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf13 = 3,			// module dgf13 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf14 = 4,			// module dgf14 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf15 = 5,			// module dgf15 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf16 = 6,			// module dgf16 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf21 = 7,			// module dgf21 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf22 = 8,			// module dgf22 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf23 = 9,			// module dgf23 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf24 = 10,			// module dgf24 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf25 = 11,			// module dgf25 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf26 = 12,			// module dgf26 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf31 = 13,			// module dgf31 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf32 = 14,			// module dgf32 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf33 = 15,			// module dgf33 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf34 = 16,			// module dgf34 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf35 = 17,			// module dgf35 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf36 = 18,			// module dgf36 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf41 = 19,			// module dgf41 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf42 = 20,			// module dgf42 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf43 = 21,			// module dgf43 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf44 = 22,			// module dgf44 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf45 = 23,			// module dgf45 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf46 = 24,			// module dgf46 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf51 = 25,			// module dgf51 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf52 = 26,			// module dgf52 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf53 = 27,			// module dgf53 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf54 = 28,			// module dgf54 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf55 = 29,			// module dgf55 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf56 = 30,			// module dgf56 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf61 = 31,			// module dgf61 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf62 = 32,			// module dgf62 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf63 = 33,			// module dgf63 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf64 = 34,			// module dgf64 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf65 = 35,			// module dgf65 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf66 = 36,			// module dgf66 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf71 = 37,			// module dgf71 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf72 = 38,			// module dgf72 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf73 = 39,			// module dgf73 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf74 = 40,			// module dgf74 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf75 = 41,			// module dgf75 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf76 = 42,			// module dgf76 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf81 = 43,			// module dgf81 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf82 = 44,			// module dgf82 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf83 = 45,			// module dgf83 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf84 = 46,			// module dgf84 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf85 = 47,			// module dgf85 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgf86 = 48,			// module dgf86 (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgfTS = 49,			// module dgfTS (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleDgfBD = 50,			// module dgfBD (Xia DGF-4C Digital Gamma Finder)
						kMrbModuleCd1 = 51,			// module cd1 (CAEN V785 ADC 32 x 12 bit)
						kMrbModuleCd2 = 52,			// module cd2 (CAEN V785 ADC 32 x 12 bit)
						kMrbModuleCd3 = 53,			// module cd3 (CAEN V785 ADC 32 x 12 bit)
						kMrbModuleCd4 = 54,			// module cd4 (CAEN V785 ADC 32 x 12 bit)
						kMrbModuleCd5 = 55,			// module cd5 (CAEN V785 ADC 32 x 12 bit)
						kMrbModuleCd6 = 56,			// module cd6 (CAEN V785 ADC 32 x 12 bit)
						kMrbModuleCd7 = 57,			// module cd7 (CAEN V775 TDC 32 x 12 bit)
						kMrbModuleCd8 = 58,			// module cd8 (CAEN V775 TDC 32 x 12 bit)
						kMrbModuleSc1 = 59,			// module sc1 (SIS 3801 scaler 32 x 32 bit)
						kMrbModuleSc2 = 60,			// module sc2 (SIS 3801 scaler 32 x 32 bit)
						kMrbModuleSc3 = 61,			// module sc3 (SIS 3801 scaler 32 x 32 bit)
						kMrbModulePu = 62,			// module pu (SIS 3600 pattern unit 32 bit)
					};

// DGF param offsets
enum EMrbDgfParamOffsets	{
								kMrbDgfParModNum			=	0,
								kMrbDgfParModCSRA			=	1,
								kMrbDgfParModCSRB			=	2,
								kMrbDgfParMaxEvents			=	7,
								kMrbDgfParSynchWait			=	10,
								kMrbDgfParInSynch			=	11,
								kMrbDgfParCoincPattern		=	8,
								kMrbDgfParCoincWait			=	9,
								kMrbDgfParControlTask		=	6,
								kMrbDgfParRunTask			=	5,
								kMrbDgfParAoutBuffer		=	304,
								kMrbDgfParLoutBuffer		=	305,
								kMrbDgfParSynchDone 		=	269,
								kMrbDgfParTraceLength0		=	86,
								kMrbDgfParChanCSRA0			=	64,
								kMrbDgfParChanCSRB0			=	65,

								kMrbDgfParRealTimeA			=	257,
								kMrbDgfParRealTimeB			=	258,
								kMrbDgfParRealTimeC			=	259,
								kMrbDgfParRunTimeA			=	260,
								kMrbDgfParRunTimeB			=	261,
								kMrbDgfParRunTimeC			=	262,
								kMrbDgfParGSLTTimeA			=	263,
								kMrbDgfParGSLTTimeB			=	264,
								kMrbDgfParGSLTTimeC			=	265,
								kMrbDgfParNumEventsA		=	266,
								kMrbDgfParNumEventsB		=	267,

								kMrbDgfParLiveTimeA0		=	319,
								kMrbDgfParLiveTimeB0		=	320,
								kMrbDgfParLiveTimeC0		=	321,
								kMrbDgfParFastPeaksA0		=	322,
								kMrbDgfParFastPeaksB0		=	323,

								kMrbDgfParLiveTimeA1		=	343,
								kMrbDgfParLiveTimeB1		=	344,
								kMrbDgfParLiveTimeC1		=	345,
								kMrbDgfParFastPeaksA1		=	346,
								kMrbDgfParFastPeaksB1		=	347,

								kMrbDgfParLiveTimeA2		=	367,
								kMrbDgfParLiveTimeB2		=	368,
								kMrbDgfParLiveTimeC2		=	369,
								kMrbDgfParFastPeaksA2		=	370,
								kMrbDgfParFastPeaksB2		=	371,

								kMrbDgfParLiveTimeA3		=	391,
								kMrbDgfParLiveTimeB3		=	392,
								kMrbDgfParLiveTimeC3		=	393,
								kMrbDgfParFastPeaksA3		=	394,
								kMrbDgfParFastPeaksB3		=	395,

								kMrbDgfStatFirstPar			=	kMrbDgfParRealTimeA,
								kMrbDgfStatLastPar			=	kMrbDgfParFastPeaksB3,

								kMrbDgfStatHdrMagic 		=	0,
								kMrbDgfStatHdrWC	 		=	1,
								kMrbDgfStatHdrSevtIdx 		=	2,
								kMrbDgfStatHdrDgfIdx		=	3,

								kMrbDgfStatMagicWord		=	0x2525,
								kMrbDgfStatEOBWord			=	0x5252
							};

enum	{	kNofCamacCrates	=	3	};		// number of camac crates
enum	{	kNofDgfSevts	=	10	};		// number of dgf subevents
enum	{	kNofAdcsCDFront	=	2	};		// number of adcs (CD front)
enum	{	kNofAdcsCDBack	=	3	};		// number of adcs (CD back)
enum	{	kNofAdcsCDE	=	1	};		// number of adcs (CDE)
enum	{	kNofTdcs	=	2	};		// number of tdcs
enum	{	kNofDgfClusters	=	8	};		// number of dgf clusters
enum	{	kNofDgfCoresPerCluster	=	3	};		// number of cores per cluster
enum	{	kNofDgfCores	=	24	};		// number of dgf cores
enum	{	kNofDgfSegsPerCore	=	6	};		// number of segments per core
enum	{	kNofDgfChannels	=	52	};		// number of dgf clusters
enum	{	kNofAdcs	=	6	};		// number of adcs
enum	{	kNofCaens	=	8	};		// number of caen modules
enum	{	kNofAdcChannels	=	192	};		// number of adc channels
enum	{	kNofTdcChannels	=	64	};		// number of tdc channels
enum	{	kNofCaenChannels	=	256	};		// number of caen channels
enum	{	kNofCaenSevts	=	8	};		// number of caen subevents
enum	{	kMaxEventsPerRdo	=	31	};		// number of events per readout
enum	{	kMaxEventsBeamDumpDet	=	300	};		// number of events for beam dump detector
enum	{	kTSChannel	=	0	};		// time stamping channel
enum	{	kEBISChannel	=	1	};		// EBIS time stamp channel
enum	{	kT1Channel	=	2	};		// T1 time stamp channel
enum	{	kT2Channel	=	3	};		// T2 time stamp channel
enum	{	kLaserOn	=	0	};		// laser on signal
enum	{	kLaserOff	=	1	};		// laser off signal
enum	{	kFreePartTrig	=	2	};		// downscaled free particle trigger
enum	{	kPartGammaTrig	=	3	};		// particle gamma trigger
enum	{	kGoodCaenTS	=	0	};		// caen: ts match
enum	{	kBadCaenTS	=	1	};		// caen: ts mismatch
enum	{	kGoodPuTS	=	2	};		// pattern unit: ts match
enum	{	kBadPuTS	=	3	};		// pattern unit: ts mismatch
enum	{	kDgfRange	=	65536	};		// dgf range
enum	{	kDgfBinning	=	1	};		// dgf binning
enum	{	kDgfRangeB	=	65536	};		// number of dgf bins
enum	{	kDgfRangeC	=	10000	};		// dgf bins, calibrated
enum	{	kAdcRangeC	=	10000	};		// adc bins, calibrated
enum	{	kTdcRangeC	=	2000	};		// tdc bins, calibrated
enum	{	kPsaRange	=	40	};		// psa range
enum	{	kPsaBins	=	400	};		// psa bins
enum	{	kPeakCheckBins	=	100	};		// peak check bins
enum	{	kPeakCheckEvents	=	300000	};		// peak check events
enum	{	kIdxCdf1	=	11	};		// 
enum	{	kMod1Cdf	=	51	};		// 
enum	{	kIdxCdf2	=	12	};		// 
enum	{	kIdxCdb1	=	13	};		// 
enum	{	kMod1Cdb	=	53	};		// 
enum	{	kIdxCdb2	=	14	};		// 
enum	{	kIdxCdb3	=	15	};		// 
enum	{	kIdxCde	=	16	};		// 
enum	{	kIdxCluster1	=	1	};		// 
enum	{	kIdxCluster2	=	2	};		// 
enum	{	kIdxCluster3	=	3	};		// 
enum	{	kIdxCluster4	=	4	};		// 
enum	{	kIdxCluster5	=	5	};		// 
enum	{	kIdxCluster6	=	6	};		// 
enum	{	kIdxCluster7	=	7	};		// 
enum	{	kIdxCluster8	=	8	};		// 
enum	{	kIdxTSCluster	=	9	};		// 
enum	{	kIdxBDCluster	=	10	};		// 
enum	{	kIdxPatternUnit	=	20	};		// 
#endif
