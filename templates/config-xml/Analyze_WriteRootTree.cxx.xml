<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE mrbcode SYSTEM "mrbcode.dtd">

<?xml-stylesheet type="text/xsl" href="mrbcode.xsl" ?>

<mrbcode type="contiguous">
    <method indent="1">
    <methodHdr>
        <mname>WriteRootTree</mname>
        <cname><m>TMrbAnalyze</m></cname>
        <purp>Open a file to write raw data to tree</purp>
        <argList>
            <arg>
                <aname>IOSpec</aname>
                <atype><m>TMrbIOSpec</m> *</atype>
                <descr>i/o specifications</descr>
            </arg>
        </argList>
        <returnVal>
            <arg>
                <aname>Flag</aname>
                <atype>Bool_t</atype>
                <descr>kTRUE/kFALSE</descr>
            </arg>
        </returnVal>
    </methodHdr>
    <code>
        <cbody>
            <l><r>TString</r> rootFile;</l>
            <l>if ((<m class="TMrbIOSpec">IOSpec</m>->GetOutputMode() &amp; <m>TMrbIOSpec</m>::kOutputOpen) == 0) return(kTRUE);</l>
            
            <l>if (fWriteRootTree) {</l>
            <l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Err</mm>() &lt;&lt; "ROOT file already open - " &lt;&lt; fRootFileOut-><rm class="TObject">GetName</rm>() &lt;&lt; endl;</l>
            <l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
            <l>	return(kFALSE);</l>
            <l>}</l>
            
            <l>rootFile = IOSpec->GetOutputFile();</l>
            
            <l>if (verboseMode) {</l>
            <l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Out</mm>() &lt;&lt; "Opening ROOT file \"" &lt;&lt; rootFile &lt;&lt; "\"" &lt;&lt; endl;</l>
            <l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
            <l>}</l>
            
            <l>fRootFileOut = new <r>TFile</r>(rootFile.Data(), "RECREATE", "<s>expTitle</s>");</l>
            <l>fRootFileOut-><rm class="TFile">SetCompressionLevel</rm>(1);</l>
            <l>fWriteRootTree = kTRUE;</l>
            
            <l>// create trees for start/stop info</l>
            <l><m class="TUsrEvtStart">gStartEvent</m>-><mm class="TUsrEvtStart">CreateTree</mm>();</l>
            <l><m class="TUsrEvtStop">gStopEvent</m>-><mm class="TUsrEvtStop">CreateTree</mm>();</l>
            
            <l>// create tree to hold dead-time data</l>
            <l><m class="TUsrDeadTime">gDeadTime</m>-><mm class="TUsrDeadTime">CreateTree</mm>();</l>
        </cbody>
        <foreach indent="2">
            <tag>EVT_CREATE_TREE</tag>
            <comment type="code">create ROOT trees for each event</comment>
            <item>event</item>
            <descr>once per event</descr>
            <slist>
                <subst><sname>className</sname><descr>class name</descr></subst>
                <subst><sname>evtName</sname><descr>event name</descr></subst>
                <subst><sname>trigNo</sname><descr>trigger number</descr></subst>
                <subst><sname>eventType</sname><descr>event type: E=readout/hardware, U=user-defined</descr></subst>
            </slist>
            <switch indent="3">
                <item>eventType</item>
                <case>
                    <tag>E</tag>
                    <descr>normal (hardware) event</descr>
                    <cbody>
                        <l>g<S>className</S>->CreateTree();  // event <s>evtName</s>, trigger <s>trigNo</s></l>
                    </cbody>
                </case>
                <case>
                    <tag>U</tag>
                    <descr>user-defined event</descr>
                    <cbody>
                        <l>g<S>className</S>->CreateTree(); // user-defined event <s>className</s></l>
                    </cbody>
                </case>
            </switch>
        </foreach>
        <foreach indent="2">
            <tag>EVT_SET_WRITE_TREE</tag>
            <comment type="code">control tree output individually for each event</comment>
            <item>event</item>
            <descr>once per event</descr>
            <slist>
                <subst><sname>className</sname><descr>class name</descr></subst>
                <subst><sname>evtName</sname><descr>event name</descr></subst>
                <subst><sname>trigNo</sname><descr>trigger number</descr></subst>
                <subst><sname>eventType</sname><descr>event type: E=readout/hardware, U=user-defined</descr></subst>
            </slist>
            <switch indent="3">
                <item>eventType</item>
                <case>
                    <tag>E</tag>
                    <descr>normal (hardware) event</descr>
                    <cbody>
                        <l>// event <s>evtName</s>, trigger <s>trigNo</s></l>
                        <l>g<S>className</S>->WriteTree(<r class="TEnv">gEnv</r>-><rm class="TEnv">GetValue</rm>(<m class="TMrbAnalyze">gMrbAnalyze</m>-><mm class="TMrbAnalyze">GetResource</mm>("Event.<S>evtName</S>.WriteTree"), kTRUE));</l>										
                        <l>if (!g<S>className</S>->TreeToBeWritten()) {</l>
                        <l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Wrn</mm>() &lt;&lt; "Output of tree data TURNED OFF for event \"<s>evtName</s>\"" &lt;&lt; endl;</l>
                        <l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
                        <l>}</l>
                    </cbody>
                </case>
                <case>
                    <tag>U</tag>
                    <descr>user-defined event</descr>
                    <cbody>
                        <l>// user-defined event <s>className</s></l>
                        <l>g<S>className</S>->WriteTree(<r class="TEnv">gEnv</r>-><rm class="TEnv">GetValue</rm>(<m class="TMrbAnalyze">gMrbAnalyze</m>-><mm class="TMrbAnalyze">GetResource</mm>("Event.<S>evtName</S>.WriteTree"), kTRUE));</l>	
                        <l>if (!g<S>className</S>->TreeToBeWritten()) {</l>
                        <l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Wrn</mm>() &lt;&lt; "Output of tree data TURNED OFF for event \"<s>className</s>\"" &lt;&lt; endl;</l>
                        <l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
                        <l>}</l>
                    </cbody>
                </case>
            </switch>
        </foreach>
    </code>
    </method>
    </mrbcode>
