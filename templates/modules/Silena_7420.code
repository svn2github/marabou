/*_________________________________________________________________[CODE FILE]
//////////////////////////////////////////////////////////////////////////////
// @(#)Name:       Silena_7420.code
// @(#)Purpose:    Camac code for module Silena 7420 (NIM)
// Description:    Contains pieces of camac code to operate an ADC of type
//                 Silena 7420 (NIM)
// @(#)Author:     R. Lutter
// @(#)Revision:   SCCS:  %W%
// @(#)Date:       %G%
// Keywords:       
////////////////////////////////////////////////////////////////////////////*/

%%BeginOfCode%%

%%EndOfCode%%
%%MODULE_DEFS%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_COMMON_CODE%%

%%BeginOfCode%%

									/* init module $moduleName in $modulePosition */
					f_ut_send_msg("m_read_meb", "Initializing module $moduleName in $modulePosition: $moduleTitle\n", ERR__MSG_INFO, MASK__PRTT);
					CIO_CTRL2_R2B($moduleName, F(24), A(10));	/* disable input */
					CIO_CTRL2_R2B($moduleName, F(24), A(11));	/* disable requests */
					CIO_CTRL2_R2B($moduleName, F(24), A(1)); 	/* disable addr counter */
					CIO_WRITE_R2B($moduleName, F(16), A(2), 0L);	/* clear output reg */
					CIO_CTRL_R2B($moduleName, F(10), A(14));	/* clear lam */
					CIO_WRITE_R2B($moduleName, F(23), A(9), 077L);	/* clear status */
					CIO_WRITE_R2B($moduleName, F(19), A(9), 001L);	/* set data reject */
%%EndOfCode%%
%%INIT_MODULE%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_BLOCK_XFER%%

%%BeginOfCode%%
					$mnemoLC_set_dwin($moduleName, $lowerThresh, $upperThresh); 				/* set digital window limits */
%%EndOfCode%%
%%INIT_CHANNEL%%

%%BeginOfCode%%
									/* clear module $moduleName in $modulePosition */
					CIO_CTRL2_R2B($moduleName, F(24), A(10));	/* disable input */
					CIO_CTRL2_R2B($moduleName, F(24), A(11));	/* disable requests */
					CIO_CTRL2_R2B($moduleName, F(24), A(1)); 	/* disable addr counter */
					CIO_WRITE_R2B($moduleName, F(16), A(2), 0L);	/* clear output reg */
					CIO_CTRL_R2B($moduleName, F(10), A(14));	/* clear lam */
					CIO_WRITE_R2B($moduleName, F(23), A(9), 077L);	/* clear status */
					CIO_WRITE_R2B($moduleName, F(19), A(9), 001L);	/* set data reject */
%%EndOfCode%%
%%CLEAR_MODULE%%

%%BeginOfCode%%
					RDO_C2MI_16_C_M(0x1fffL);		/* read $chnName (data only) */
%%EndOfCode%%
%%READ_CHANNEL%%

%%BeginOfCode%%

%%EndOfCode%%
%%READ_MODULE%%

%%BeginOfCode%%
					RDO_2MEM_16($data);		/* store data word */
%%EndOfCode%%
%%STORE_DATA%% 

%%BeginOfCode%%
					RDO_SETUP($moduleName, F(2), A(2));	/* setup module $moduleName */
%%EndOfCode%%
%%SETUP_READOUT%%	

%%BeginOfCode%%

%%EndOfCode%%
%%FINISH_READOUT%%	
%%BeginOfCode%%
														/* start $moduleName / $chnName */
					CIO_CTRL_R2B($moduleName, F(10), A(14));	/* clear lam */
					CIO_WRITE_R2B($moduleName, F(23), A(9), 044L);	/* clear test & request bits */
					CIO_WRITE_R2B($moduleName, F(16), A(2), 0L);	/* clear output reg */
					CIO_CTRL2_R2B($moduleName, F(26), A(11));	/* enable requests */
					CIO_CTRL2_R2B($moduleName, F(26), A(10));	/* enable input */
					CIO_WRITE_R2B($moduleName, F(19), A(9), 020L);	/* set adc bit */
%%EndOfCode%%
%%START_ACQUISITION%%	

%%BeginOfCode%%

%%EndOfCode%%
%%START_ACQUISITION_GROUP%%	

%%BeginOfCode%%
														/* stop $moduleName / $chnName */
					CIO_WRITE_R2B($moduleName, F(23), A(9), 020L);	/* clear adc bit */
					CIO_CTRL2_R2B($moduleName, F(24), A(10));	/* disable input */
					CIO_CTRL2_R2B($moduleName, F(24), A(11));	/* disable requests */
					CIO_WRITE_R2B($moduleName, F(23), A(9), 044L);	/* clear test & request bits */
					CIO_WRITE_R2B($moduleName, F(16), A(2), 0L);	/* clear output reg */
%%EndOfCode%%
%%STOP_ACQUISITION%%	

%%BeginOfCode%%

%%EndOfCode%%
%%STOP_ACQUISITION_GROUP%%	

%%BeginOfCode%%

int $mnemoLC_set_dwin(volatile unsigned long * smdw, unsigned int lthr, unsigned int uthr) {	/* set digital window limits */
	register int i;
	register unsigned long wdwbit = 1L << 13;		/* 'band active' bit */
	CIO_CTRL2_R2B(smdw, F(24), A(10));	/* disable input */
	CIO_CTRL2_R2B(smdw, F(24), A(11));	/* disable requests */
	CIO_CTRL2_R2B(smdw, F(24), A(1)); 	/* stop addr counter */
	CIO_CTRL2_R2B(smdw, F(26), A(1)); 	/* start addr counter */
	for (i = 0; i < lthr; i++) CIO_WRITE_R2B(smdw, F(16), A(0), 0L);
	for (i = lthr; i <= uthr; i++) CIO_WRITE_R2B(smdw, F(16), A(0), wdwbit);
	for (i > uthr; i < 8191; i++) CIO_WRITE_R2B(smdw, F(16), A(0), 0L);
	return(1);
}

%%EndOfCode%%
%%UTILITIES%%

%%BeginOfCode%%
int $mnemoLC_set_dwin();		/* set digital windows */
%%EndOfCode%%
%%DEFINE_PROTOTYPES%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_GLOBALS%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_GLOBALS_ONCE_ONLY%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LOCAL_VARS_INIT%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LOCAL_VARS_READOUT%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_INCLUDE_PATHS%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LIBRARIES%%

