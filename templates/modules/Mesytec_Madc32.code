/*_________________________________________________________________[CODE FILE]
//////////////////////////////////////////////////////////////////////////////
// Name:           Mesytec_Madc32.code
// Purpose:        Code for Mesytec adc type MADC-32
// Description:    Contains template code to operate a MADC-32 module
// Author:         R. Lutter
// Revision:       
// Date:           
// Keywords:       
////////////////////////////////////////////////////////////////////////////*/

%%BeginOfCode%%
#include "madc32.h"
#include "madc32_protos.h"
%%EndOfCode%%
%%MODULE_DEFS%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_COMMON_CODE%%

%%BeginOfCode%%

									/* init module $moduleName at addr $baseAddr */
					f_ut_send_msg("m_read_meb", "Initializing module $moduleName in $modulePosition: $moduleTitle\n", ERR__MSG_INFO, MASK__PRTT);
					s_$moduleName = madc32_alloc($baseAddrL, $moduleName, "$moduleName", $moduleSerial); /* allocate data struct */
					madc32_moduleInfo(s_$moduleName);						/* read module info */
					madc32_fillStruct(s_$moduleName, "$settingsFile");		/* fill sis struct from environment data */
					madc32_loadFromDb(s_$moduleName); 					/* load module regs from database */
					madc32_dumpRegisters(s_$moduleName, "$dumpFile"); 	/* dump registers to file */
					madc32_reset(s_$moduleName);	 						/* reset module */
					madc32_resetReadout(s_$moduleName);	 				/* reset readout regs */

%%EndOfCode%%
%%INIT_MODULE%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_CHANNEL%%

%%BeginOfCode%%

%%EndOfCode%%
%%READ_CHANNEL%%

%%BeginOfCode%%
					evt.out32 += madc32_readTimeB(s_$moduleName, (uint32_t *) evt.out32);	/* read time counter B */
					evt.out32 += madc32_readout(s_$moduleName, (uint32_t *) evt.out32);	/* read data */
					if (s_$moduleName->updSettings) { 				/* update settings? */
						s_$moduleName->updCountDown--;
						if ((s_$moduleName->updCountDown <= 0) && madc32_updateSettings(s_$moduleName, "$updateFile")) {
 							sprintf(msg, "Updating settings for module $moduleName after %d count(s)\n", s_$moduleName->updInterval);
 							f_ut_send_msg("m_read_meb", msg, ERR__MSG_ERROR, MASK__PRTT);
							madc32_stopAcq(s_$moduleName);
							madc32_fillStruct(s_$moduleName, "$settingsFile");
							madc32_loadFromDb(s_$moduleName);
							madc32_reset(s_$moduleName);
							madc32_resetReadout(s_$moduleName);
							madc32_startAcq(s_$moduleName);
						}
					}
%%EndOfCode%%
%%READ_MODULE%%

%%BeginOfCode%%

%%EndOfCode%%
%%INCREMENT_CHANNEL%%

%%BeginOfCode%%

%%EndOfCode%%
%%SKIP_CHANNELS%%

%%BeginOfCode%%

%%EndOfCode%%
%%WRITE_SUBADDR%% 

%%BeginOfCode%%

%%EndOfCode%%
%%STORE_DATA%% 

%%BeginOfCode%%

%%EndOfCode%%
%%CLEAR_MODULE%%

%%BeginOfCode%%

%%EndOfCode%%
%%SETUP_READOUT%%	

%%BeginOfCode%%

%%EndOfCode%%
%%FINISH_READOUT%%

%%BeginOfCode%%
								madc32_startAcq(s_$moduleName); 	/* start module $moduleName */
%%EndOfCode%%
%%START_ACQUISITION%%

%%BeginOfCode%%
		
%%EndOfCode%%
%%START_ACQUISITION_GROUP%%

%%BeginOfCode%%
								madc32_stopAcq(s_$moduleName);  	/* stop module $moduleName */
%%EndOfCode%%
%%STOP_ACQUISITION%%

%%BeginOfCode%%
		
%%EndOfCode%%
%%STOP_ACQUISITION_GROUP%%

%%BeginOfCode%%

%%EndOfCode%%
%%UTILITIES%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_PROTOTYPES%%

%%BeginOfCode%%
static struct s_madc32 * s_$moduleName;
%%EndOfCode%%
%%DEFINE_GLOBALS%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_GLOBALS_ONCE_ONLY%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LOCAL_VARS_INIT%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LOCAL_VARS_READOUT%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_INCLUDE_PATHS%%

%%BeginOfCode%%
	-L$marabouPath/powerpc/lib/$lynxVersion -lMadc32
%%EndOfCode%%
%%DEFINE_LIBRARIES%%

