/*_________________________________________________________________[CODE FILE]
//////////////////////////////////////////////////////////////////////////////
// @(#)Name:       Silena_4418T.code
// @(#)Purpose:    Camac code for module Silena 4418/T
// Description:    Contains pieces of camac code to operate a TDC of type
//                 Silena 4418/T
// @(#)Author:     R. Lutter
// @(#)Revision:   SCCS:  %W%
// @(#)Date:       %G%
// Keywords:       
////////////////////////////////////////////////////////////////////////////*/

%%BeginOfCode%%

%%EndOfCode%%
%%MODULE_DEFS%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_COMMON_CODE%%

%%BeginOfCode%%

					f_ut_send_msg("m_read_meb", "Initializing module $moduleName in $modulePosition: $moduleTitle\n", ERR__MSG_INFO, MASK__PRTT);
					$mnemoLC_init($moduleName, $subDevice, $threshL);	/* init $moduleName in $modulePosition */
%%EndOfCode%%
%%INIT_MODULE%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_BLOCK_XFER%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_CHANNEL%%

%%BeginOfCode%%
					data = CIO_READ_R2B($moduleName, F(0 + $subDevice), A(3)); /* read data & incr addr: F0/F1.A3 */
					RDO_2MEM_16((data >> 12) & 0xfff);					/* write addr */
					RDO_2MEM_16(data & 0xfff);							/* write data */
%%EndOfCode%%
%%READ_CHANNEL%%

%%BeginOfCode%%
					for (i = 0; i < wc; i++) {
						data = CIO_READ_R2B($moduleName, F(0 + $subDevice), A(3)); /* read data & incr addr: F0/F1.A3 */
						RDO_2MEM_16((data >> 12) & 0xfff);					/* write addr */
						RDO_2MEM_16(data & 0xfff);							/* write data */
					}
%%EndOfCode%%
%%READ_MODULE%%

%%BeginOfCode%%

%%EndOfCode%%
%%INCREMENT_CHANNEL%%

%%BeginOfCode%%

%%EndOfCode%%
%%SKIP_CHANNELS%%

%%BeginOfCode%%
					RDO_2MEM_16($subaddr);
%%EndOfCode%%
%%WRITE_SUBADDR%% 

%%BeginOfCode%%
					RDO_2MEM_16($data);
%%EndOfCode%%
%%STORE_DATA%% 

%%BeginOfCode%%
					CIO_CTRL2_R2B($moduleName, F(26), A(5 + $subDevice));	/* enable camac mode: F26.A5/A6 */
					CIO_CTRL_R2B($moduleName, F(9 + $subDevice), A(0));	/* reset addr counter */
					CIO_CTRL_R2B($moduleName, F(9 + $subDevice), A(1));	/* reset data accept counter */
					CIO_CTRL2_R2B($moduleName, F(24), A(5 + $subDevice));	/* disable camac mode: F24.A5/A6 */
%%EndOfCode%%
%%CLEAR_MODULE%%

%%BeginOfCode%%
												/* read $moduleName (subdev $subDevice) in $modulePosition */
					CIO_CTRL2_R2B($moduleName, F(26), A(5 + $subDevice));	/* enable camac mode: F26.A5/A6 */
					wc = CIO_READ_R2B($moduleName, F(2 + $subDevice), A(1));	/* read & clear */
					wc &= 0xfff;									/* data accept count: F2/F3.A1 */
%%EndOfCode%%
%%SETUP_READOUT%%	

%%BeginOfCode%%
					CIO_CTRL2_R2B($moduleName, F(24), A(5 + $subDevice));	/* disable camac mode: F26.A5/A6 */
%%EndOfCode%%
%%FINISH_READOUT%%	

%%BeginOfCode%%

%%EndOfCode%%
%%START_ACQUISITION%%

%%BeginOfCode%%
		
%%EndOfCode%%
%%START_ACQUISITION_GROUP%%

%%BeginOfCode%%

%%EndOfCode%%
%%STOP_ACQUISITION%%

%%BeginOfCode%%
		
%%EndOfCode%%
%%STOP_ACQUISITION_GROUP%%

%%BeginOfCode%%
int $mnemoLC_init(volatile unsigned long * adcd, int subdev, long thresh) {	/* initialize flash adc */
	register int i;
	CIO_CTRL_R2B(adcd, F(9), A(15));						/* clear module */
	CIO_CTRL2_R2B(adcd, F(26), A(5 + subdev));				/* enable camac mode: F26.A5/A6 */
	CIO_CTRL_R2B(adcd, F(9 + subdev * 2), A(0));			/* reset addr counter: F9/F11.A0 */
	for (i = 0; i < 2048; i++) CIO_WRITE_R2B(adcd, F(16 + subdev), A(4), thresh);	/* write threshold: F16/F17.A4 */
	CIO_CTRL2_R2B(adcd, F(24), A(5 + subdev));				/* disable camac mode: F24.A5/A6 */
	return(1);
}

%%EndOfCode%%
%%UTILITIES%%

%%BeginOfCode%%
int $mnemoLC_init(volatile unsigned long *, int, long);			/* initialize flash adc */

%%EndOfCode%%
%%DEFINE_PROTOTYPES%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_GLOBALS%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_GLOBALS_ONCE_ONLY%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LOCAL_VARS_INIT%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LOCAL_VARS_READOUT%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_INCLUDE_PATHS%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LIBRARIES%%

