/*_________________________________________________________________[CODE FILE]
//////////////////////////////////////////////////////////////////////////////
// @(#)Name:       LeCroy_4434.code
// @(#)Purpose:    Camac code for module LeCroy 4434
// Description:    Contains pieces of camac code to operate a scaler of type
//                 LeCroy 4434
// @(#)Author:     R. Lutter
// @(#)Revision:   SCCS:  %W%
// @(#)Date:       %G%
// Keywords:       
////////////////////////////////////////////////////////////////////////////*/

%%BeginOfCode%%
/* bit definitions for scaler LeCroy 4434 */
#define $mnemoUC_M_FA 	0x001fL 	/* first addr: 5 bits */
#define $mnemoUC_M_RN	0x1f00L 	/* number of chns to be read: 5 bits */

#define $mnemoUC_B_LD	0x0020L 	/* load */
#define $mnemoUC_B_CL	0x0040L 	/* clear */
#define $mnemoUC_B_RD	0x0080L 	/* readout enable */

#define $mnemoUC_N_RN	8			/* bit pos: chns to be read */

%%EndOfCode%%
%%MODULE_DEFS%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_COMMON_CODE%%

%%BeginOfCode%%

									/* init module $moduleName in $modulePosition */
					f_ut_send_msg("m_read_meb", "Initializing module $moduleName in $modulePosition: $moduleTitle\n", ERR__MSG_INFO, MASK__PRTT);
					CIO_CTRL_R2B($moduleName, F(10), A(0));	/* clear lam */
					CIO_WRITE_R2B($moduleName, F(16), A(0), $mnemoUC_B_CL);	/* clear module */
%%EndOfCode%%
%%INIT_MODULE%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_BLOCK_XFER%%

%%BeginOfCode%%

%%EndOfCode%%
%%INIT_CHANNEL%%

%%BeginOfCode%%
					RDO_C2M_24();		/* read $chnName:A($chnNo) */					
%%EndOfCode%%
%%READ_CHANNEL%%

%%BeginOfCode%%
					RDO_BLT_24($nofParams);		/* read $nofParams scaler data a 24 bits */
%%EndOfCode%%
%%READ_MODULE%%

%%BeginOfCode%%

%%EndOfCode%%
%%INCREMENT_CHANNEL%%

%%BeginOfCode%%

%%EndOfCode%%
%%SKIP_CHANNELS%%

%%BeginOfCode%%

%%EndOfCode%%
%%WRITE_SUBADDR%% 

%%BeginOfCode%%

%%EndOfCode%%
%%STORE_DATA%% 

%%BeginOfCode%%
					CIO_WRITE_R2B($moduleName, F(16), A(0), $mnemoUC_B_CL);
%%EndOfCode%%
%%CLEAR_MODULE%%

%%BeginOfCode%%
								/* setup read $moduleName */
					CIO_WRITE_R2B($moduleName, F(16), A(0), ((($nofParams - 1) << $mnemoUC_N_RN) | $mnemoUC_B_LD | $mnemoUC_B_CL))
					RDO_SETUP($moduleName, F(2), A(0));
%%EndOfCode%%
%%SETUP_READOUT%%	

%%BeginOfCode%%

%%EndOfCode%%
%%FINISH_READOUT%%

%%BeginOfCode%%

%%EndOfCode%%
%%START_ACQUISITION%%

%%BeginOfCode%%

%%EndOfCode%%
%%START_ACQUISITION_GROUP%%

%%BeginOfCode%%

%%EndOfCode%%
%%STOP_ACQUISITION%%

%%BeginOfCode%%

%%EndOfCode%%
%%STOP_ACQUISITION_GROUP%%

%%BeginOfCode%%

%%EndOfCode%%
%%UTILITIES%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_PROTOTYPES%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_GLOBALS%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_GLOBALS_ONCE_ONLY%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LOCAL_VARS_INIT%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LOCAL_VARS_READOUT%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_INCLUDE_PATHS%%

%%BeginOfCode%%

%%EndOfCode%%
%%DEFINE_LIBRARIES%%

