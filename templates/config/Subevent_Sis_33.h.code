
//______________________________________________________[C++ CLASS DEFINITION]
//////////////////////////////////////////////////////////////////////////////
// Name:           TUsrSevt%%SEVT_NAME_UC%%
// Purpose:        Define a user-specific subevent class
// Description:    %%SEVT_TITLE%%
// Keywords:       
//////////////////////////////////////////////////////////////////////////////

class TUsrSevt%%SEVT_NAME_UC%% : public TMrbSubevent_Sis33xx {

// declare all parent events as friends
// so user may address subevent data directly from event level
%%BeginOfCode%%
	friend class TUsrEvt$className;
%%EndOfCode%%
%%SEVT_FRIENDS%%

	public:
		TUsrSevt%%SEVT_NAME_UC%%() {			// default ctor
			fSevtName = "%%SEVT_NAME_LC%%";
		};
		~TUsrSevt%%SEVT_NAME_UC%%() {};			// default dtor

		inline const Char_t * GetName() const { return(fSevtName.Data()); };
		inline Int_t GetSerial() const { return(kMrbSevt%%SEVT_NAME_UC%%); };

		Bool_t BookParams();					// book params
 		Bool_t BookHistograms();				// book histograms
 		Bool_t FillHistograms();				// fill histograms
		Bool_t AddBranch(TTree * Tree);				// add a branch to the tree
		Bool_t InitializeBranch(TTree * Tree);		// init branch addresses (replay mode only)
		inline Int_t GetTimeStamp() const { return(fTimeStamp); };	// return time stamp (100 microsecs since start)

//%%SEVT_USER_METHODS%%			user-specific methods may be included here

%%BeginOfCode%%
%ST%		inline UInt_t * GetAddr$paramNameUC$type() { return($paramNameLC$type); };	// addr of $paramNameLC$type
%SH%		inline Double_t * GetAddr$paramNameUCSS() { return($paramNameLCSS); };	// shaper (short)
%SH%		inline Double_t * GetAddr$paramNameUCLS() { return($paramNameLCLS); };	// ... (long)
%%EndOfCode%%
%%SEVT_DEFINE_ADDR%%

		inline Int_t GetIndex() const { return(kMrbSevt%%SEVT_NAME_UC%%); };			// subevent index
		inline UInt_t GetIndexBit() const { return(kMrbSevtBit%%SEVT_NAME_UC%%); };	// subevent index bit

	protected:
		TString fSevtName;						//! subevent name

// define private data members here
%%BeginOfCode%%	
%ST% 		UInt_t $paramNameLC$type[$pageSize];	// $sevtNameLC.$paramNameLC $xtype
%SH%		Double_t $paramNameLCSS[$pageSize];		// shaped data (short))
%SH%		Double_t $paramNameLCLS[$pageSize]; 	// ... (long)
%%EndOfCode%%
%%SEVT_PRIVATE_DATA%%

//%%SEVT_USER_DATA%%			user-specific data members may be included here
		
	ClassDef(TUsrSevt%%SEVT_NAME_UC%%, 1)			// [Analyze] Store SIS data in hit buffer
};
