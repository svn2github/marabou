//__________________________________________________[C++ CLASS IMPLEMENTATION]
//////////////////////////////////////////////////////////////////////////////
// Name:           %%USER_EVENT_NAME_UC%%.cxx
// Purpose:        Implement user-specific class methods
// Description:    User-supplied methods for event %%USER_EVENT_NAME_LC%% 
//
// Author:         %%AUTHOR%%
// Revision:         
// Date:           %%CREATION_DATE%%
// URL:            
// Keywords:       
//////////////////////////////////////////////////////////////////////////////

#include "TEnv.h"
#include "%%USER_EVENT_NAME_UC%%.h"
#include "SetColor.h"
#include <pthread.h>

// implement class defs
ClassImp(%%USER_EVENT_NAME_UC%%)

extern TMrbAnalyze * gMrbAnalyze;
extern TMrbLogger * gMrbLog;
extern pthread_mutex_t global_data_mutex;

Bool_t %%USER_EVENT_NAME_UC%%::Analyze() {
//________________________________________________________________[C++ METHOD]
//////////////////////////////////////////////////////////////////////////////
// Name:           %%USER_EVENT_NAME_UC%%::Analyze
// Purpose:        User's analysis code
// Arguments:      --
// Results:        kTRUE/kFALSE
// Exceptions:     
// Description:    
// Keywords:       
//////////////////////////////////////////////////////////////////////////////

	return(kTRUE);
}

void %%USER_EVENT_NAME_UC%%::Reset(Int_t InitValue, Bool_t DataOnly) {
//________________________________________________________________[C++ METHOD]
//////////////////////////////////////////////////////////////////////////////
// Name:           %%USER_EVENT_NAME_UC%%::Reset
// Purpose:        Reset event data
// Arguments:      Int_t InitValue  -- initialization value
//                 Bool_t DataOnly  -- reset data only if kTRUE
// Results:        --
// Exceptions:     
// Description:    
// Keywords:       
//////////////////////////////////////////////////////////////////////////////

}
