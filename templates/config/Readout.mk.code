#___________________________________________________________________[MAKEFILE]
#/////////////////////////////////////////////////////////////////////////////
# Makefile:        %%READOUT_FILE%%.mk
# Purpose:         Build MBS readout task for RIO2/3/4 cpus
# Author:          %%AUTHOR%%
# Revision:        $Id: Readout.mk.code,v 1.17 2011/09/14 09:26:23 Marabou Exp $
# Date:            %%CREATION_DATE%%
# URL:
#/////////////////////////////////////////////////////////////////////////////

LEGALCPU	= PPC

RPATH		= %%READOUT_PATH%%
RFILE		= %%READOUT_FILE%%

ifdef DIMDIR
DIMANN = DIM $(DIMDIR)
DIMCTRL = -DMBS_DIM
DIMINC = -I$(DIMDIR)/dim
 ifeq ($(GSI_OS),Lynx)
 DIMLIB  = $(DIMDIR)/lib_$(GSI_CPU_PLATFORM)/libdim.a
 endif
 ifeq ($(GSI_OS),Linux)
 DIMLIB  = $(DIMDIR)/lib_$(GSI_CPU_PLATFORM)_$(GSI_OS)_$(GSI_OS_VERSION)_$(GSI_OS_TYPE)/libdim.a
 endif
endif

SRC	= $(MBSROOT)/src
INC = $(MBSROOT)/inc

ifeq ($(GSI_OS),Lynx)
OBJ     = $(MBSROOT)/obj_$(GSI_CPU_PLATFORM)
LIB     = $(MBSROOT)/lib_$(GSI_CPU_PLATFORM)
endif
ifeq ($(GSI_OS),Linux)
OBJ     = $(MBSROOT)/obj_$(GSI_CPU_PLATFORM)_$(GSI_OS)_$(GSI_OS_VERSION)_$(GSI_OS_TYPE)
LIB     = $(MBSROOT)/lib_$(GSI_CPU_PLATFORM)_$(GSI_OS)_$(GSI_OS_VERSION)_$(GSI_OS_TYPE)
endif

RDO_INCL	= %%READOUT_INCLUDE%%
RDO_LIBS	= %%READOUT_LIBS%%

C_CTRL		= %%CAMAC_CONTROLLER%%

CC	= gcc

SMILIBS      = $(LIB)/lib_mbs.a $(LIB)/lib_tools.a $(LIB)/lib_mbs.a $(LIB)/lib_smi.a

SHMQ    = -DLYNX__SMEM

ifeq ($(GSI_OS_VERSION),2.5)
POSIX   =  -mthreads
CFLAGS  = $(POSIX) -D$(C_CTRL) -DLynx -DGSI_MBS -D$(GSI_CPU_ENDIAN) -D$(GSI_CPU_PLATFORM)
CES_LIBS = -L/lib/ces -lvme -lbma -luio 
LIBS    = $(LIB)/lib_mbs.a $(LIB)/lib_tools.a $(LIB)/lib_mbs.a $(DIMLIB) \
          $(LIB)/libedit.a -lnetinet
endif

ifeq ($(GSI_OS_VERSION),3.1)
POSIX   =  -mthreads
CFLAGS  = $(POSIX) -D_THREADS_POSIX4ad4 -D$(C_CTRL) -DLynx -DGSI_MBS -D$(GSI_CPU_ENDIAN) -D$(GSI_CPU_PLATFORM) 
CES_LIBS = -L/lib/ces -lvme -lbma -lbus -luio 
LIBS    = $(LIB)/lib_mbs.a $(LIB)/lib_tools.a $(LIB)/lib_mbs.a $(DIMLIB) \
          $(LIB)/libedit.a  -lposix-pre1c -lnetinet
endif

ifeq ($(GSI_OS_VERSION),4.0)
POSIX   =  -mthreads
CFLAGS  = $(POSIX) -D_THREADS_POSIX4ad4 -D$(C_CTRL) -DLynx -DGSI_MBS -D$(GSI_CPU_ENDIAN) -D$(GSI_CPU_PLATFORM)
CES_LIBS = -L/lib/ces -lvme -lbma -lbus -luio 
LIBS    = $(LIB)/lib_mbs.a $(LIB)/lib_tools.a $(LIB)/lib_mbs.a $(DIMLIB) \
          $(LIB)/libedit.a -lposix-pre1c
SMILIBS = $(LIB)/lib_mbs.a $(LIB)/lib_tools.a $(LIB)/lib_mbs.a $(LIB)/lib_smi.a \
          $(LIB)/libedit.a -llynx -lposix-pre1c -lnetinet $(CES_LIBS)
endif

CFLAGS	+= -I$(RPATH) -I$(INC) $(RDO_INCL)
LIBS	+= $(RDO_LIBS) $(CES_LIBS) -llynx

all:	m_read_meb

m_read_meb: if$(LEGALCPU) $(OBJ)/m_read_meb.o \
		$(OBJ)/objects \
		$(RPATH)/$(RFILE).c
		@echo
		@echo "[Making User Readout m_read_meb from $(RFILE).c]"
		@echo
		$(CC) $(CFLAGS) -o m_read_meb  $(RPATH)/$(RFILE).c  $(OBJ)/m_read_meb.o  $(LIBS)
		strip m_read_meb
		rm -f *.unstripped
		chmod og-w m_read_meb

clean :
	rm -f core *~ *.bak *.jou m_read_meb mbslog.l


if$(LEGALCPU):
	@if [ $(GSI_LYNX_PROC_FAM) != $(LEGALCPU) ];\
	then\
		echo "make: legal on $(LEGALCPU) cpus only - can't be executed on `hostname`";\
		exit 1;\
	fi

