<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE mrbcode SYSTEM "mrbcode.dtd">

<?xml-stylesheet type="text/xsl" href="mrbcode.xsl" ?>

<mrbcode type="contiguous">
	<file>
		<tag type="root">ANA_XML_ROOT</tag>
		<slist type="global">
			<subst><sname>xprefix</sname><descr>description/name of experiment</descr></subst>
			<subst><sname>author</sname><descr>author's name</descr></subst>
			<subst><sname>mailAddr</sname><descr>author's mail address</descr></subst>
			<subst><sname>URL</sname><descr>author's URL</descr></subst>
			<subst><sname>purpose</sname><descr>purpose of this code</descr></subst>
		</slist>
		<fileHdr>
			<xname>Analyze.cxx.xml</xname>
			<gname><S>xprefix</S>Analyze.cxx</gname>
			<purp><S>purpose</S></purp>
			<rootClassList>	<classRef><cname>TSystem</cname><descr>Interface ROOT&lt;-&gt;Linux</descr></classRef>
						<classRef><cname>TEnv</cname><descr>ROOT's environment</descr></classRef>
			</rootClassList>
			<mrbClassList>	<classRef><cname>TMrbLogger</cname><descr>Message logger</descr></classRef>
						<classRef><cname>TMrbTransport</cname><descr>Transport manager MBS-&gt;ROOT</descr></classRef>
						<classRef><cname>TMrbAnalyze</cname><descr>Base object for user's acquisition/analysis</descr></classRef>
						<classRef><cname>TMrbLofUserVars</cname><descr>List of user variables</descr></classRef>
						<classRef><cname>TMrbIOSpec</cname><descr>I/O specifications</descr></classRef>
						<classRef><cname>TUsrEvtStart</cname><descr>Start event</descr></classRef>
						<classRef><cname>TUsrEvtStop</cname><descr>Stop event</descr></classRef>
						<classRef><cname>TUsrDeadTime</cname><descr>Dead time monitor</descr></classRef>
			</mrbClassList>
			<author><S>author</S></author>
			<mail><s>mailAddr</s></mail>
			<url><s>URL</s></url>
			<version>$Id: Analyze.cxx.xml,v 1.4 2008-02-18 12:29:03 Rudolf.Lutter Exp $</version>
			<date>$Date: 2008-02-18 12:29:03 $</date>
		</fileHdr>
		<code indent="1">
			<comment type="code">class definitions</comment>
			<cbody>
				<l>#include "<S>xprefix</S>Analyze.h"</l>
			</cbody>
		</code>
		<code indent="1">
			<comment type="code">common index declarations for analysis and readout</comment>
			<cbody>
				<l>#include "<S>xprefix</S>CommonIndices.h"</l>
			</cbody>
		</code>
		<code indent="1">
			<cbody>
				<l>#include "SetColor.h"</l><l>#include "pthread.h" 	// pthread header file</l>
			</cbody>
		</code>
		<foreach indent="1">
			<tag>INCLUDE_USER_GLOBALS</tag>
			<comment type="code">global defs supplied by user</comment>
			<item>file</item>
			<descr>more than one file possible</descr>
			<slist><subst><sname>iclFile</sname><descr>file containing globals defined by user</descr></subst></slist>
			<cbody>
				<l>#include "<s>iclFile</s>"</l>
			</cbody>
		</foreach>
		<code indent="1">
			<comment type="code">global objects</comment>
			<cbody>
				<l>#include "<S>xprefix</S>AnalyzeGlobals.h"</l>
			</cbody>
		</code>
		<code indent="1">
			<tag>INCLUDE_EVT_SEVT_MOD_GLOBALS</tag>
			<comment type="code">special global defs for events, subevents, and modules</comment>
			<foreach indent="2">
				<item>event</item>
				<descr>once per event</descr>
				<include indent="3"><descr>event-specific definitions</descr></include>
			</foreach>
			<foreach indent="2">
				<item>subevent</item>
				<descr>once per subevent</descr>
				<include indent="3"><descr>subevent-specific definitions</descr></include>
			</foreach>
			<foreach indent="2">
				<item>module</item>
				<descr>once per module</descr>
				<include indent="3"><descr>module-specific definitions</descr></include>
			</foreach>
		</code>
		<foreach indent="1">
			<tag>IMPLEMENT_CLASSES</tag>
			<comment type="code">implement class defs</comment>
			<item>class</item>
			<descr>one statement per class</descr>
			<slist><subst><sname>cname</sname><descr>class name</descr></subst></slist>
			<cbody>
				<l>ClassImp(<s>cname</s>)</l>
			</cbody>
		</foreach>
		<code indent="1">
			<comment type="code">global vars and external refs</comment>
			<cbody>
				<l>extern pthread_mutex_t global_data_mutex;			//  global pthread mutex to protect TMapped data</l>
				<nl/>
				<l>extern <m>TMrbLogger</m> * gMrbLog;					//  MARaBOU's logging mechanism</l>
				<nl/>
				<l>extern <m>TMrbTransport</m> * gMrbTransport;				//  base class for MBS transport</l>
				<l>extern <m>TMrbAnalyze</m> * gMrbAnalyze;				//  base class for user's analysis</l>
				<nl/>				
				<l>extern <m>TUsrEvtStart</m> * gStartEvent;					//  start + stop events</l>
				<l>extern <m>TUsrEvtStop</m> * gStopEvent;</l>
				<l>extern <m>TUsrDeadTime</m> * gDeadTime;				//  dead-time data</l>
				<nl/>				
				<l>extern <m>TMrbLofUserVars</m> * gMrbLofUserVars;			//  list of user vars/wdws</l>
				<nl/>				
				<l>static Bool_t verboseMode = kFALSE;					//  verbosity flag;</l>
				<l>static Bool_t forcedDump = kFALSE;				//  kTRUE -> dump records</l>
				<l>static Int_t recNo = 0;</l>
			</cbody>
		</code>
		
		<method indent="1">
			<methodHdr>
				<mname>Initialize</mname>
				<cname><m>TMrbAnalyze</m></cname>
				<purp>Instantiate user objects, initialize values</purp>
				<argList>
					<arg>
						<aname>IOSpec</aname>
						<atype><m>TMrbIOSpec</m> *</atype>
						<descr>i/o specifications</descr>
					</arg>
				</argList>
				<returnVal>
					<arg>
						<aname>Flag</aname>
						<atype>Bool_t</atype>
						<descr>kTRUE/kFALSE</descr>
					</arg>
				</returnVal>
			</methodHdr>
			<code>
				<cbody>
					<l>verboseMode = (Bool_t) <r class="TEnv">gEnv</r>-><rm class="TEnv">GetValue</rm>("<m>TMrbAnalyze</m>.VerboseMode", kFALSE);</l>
					<l>forcedDump = (Bool_t) <r class="TEnv">gEnv</r>-><rm class="TEnv">GetValue</rm>("<m>TMrbAnalyze</m>.ForcedDump", kFALSE);</l>		
				</cbody>
				<foreach indent="2">
					<tag>ADD_USER_ENV</tag>
					<comment type="code">add user's environment defs</comment>
					<item>file</item>
					<descr>more than one file possible</descr>
					<slist><subst><sname>rcFile</sname><descr>file containing env definitions</descr></subst></slist>
					<cbody>
						<l>Bool_t fileOk = <m class="TMrbAnalyze">this</m>-><mm class="TMrbAnalyze">AddResourcesFromFile</mm>("<s>rcFile</s>");</l>
						<l>if (verboseMode &amp;&amp; fileOk) {</l>
						<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Out</mm>() &lt;&lt; "Reading user's environment defs from file <s>rcFile</s>" &lt;&lt;  endl;</l>
						<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="">ClassName</rm>(), "Initialize", setblue);</l>
						<l>}</l>
					</cbody>
				</foreach>
				<foreach indent="2">
					<tag>HISTO_INIT_ARRAYS</tag>
					<comment type="code">initialize histogram arrays</comment>
					<item>array</item>
					<descr>once per histogram array</descr>
					<slist>
						<subst><sname>sevtName</sname><descr>subevent name</descr></subst>
						<subst><sname>paramName</sname><descr>parameter name</descr></subst>
						<subst><sname>nofParams</sname><descr>number of parameters</descr></subst>
						<subst><sname>nofHistos</sname><descr>number of histograms</descr></subst>
						<subst><sname>hArrayName</sname><descr>name of histogram array</descr></subst>
						<subst><sname>indexRange</sname><descr>range of histogram index</descr></subst>
						<subst ><sname>hprefix</sname><descr>prefix</descr></subst>
						<subst ><sname>arrayType</sname><descr>type of array</descr></subst>
					</slist>
					<switch indent="3">
						<item>arrayType</item>
						<case>
							<tag>N</tag>
							<descr>normal</descr>
							<cbody>
								<l>hArray<S>hprefix</S><S>paramName</S>.Expand(<s>indexRange</s>); 	hArray<S>hprefix</S><S>paramName</S>.Clear();	//  subevent <s>sevtName</s>, param <s>paramName</s>[<s>indexRange</s>]</l>
							</cbody>
						</case>
						<case>
							<tag>A</tag>
							<descr>array mode</descr>
							<cbody>
								<l>h<S>hprefix</S><S>sevtName</S>Array.Expand(<s>nofParams</s>); h<S>hprefix</S><S>sevtName</S>Array.Clear();	//  <s>sevtName</s></l>
							</cbody>
						</case>
						<case>
							<tag>U</tag>
							<descr>user-defined array</descr>
							<cbody>
								<l><s>hArrayname</s>.Expand(<s>nofHistos</s>); <s>hArrayname</s>.Clear();	//  user-defined histos in array <s>hArrayName</s></l>
							</cbody>
						</case>
					</switch>
				</foreach>
				<code indent="2">
					<tag>MODULE_INIT_LIST</tag>
					<comment type="code">initialize list of modules</comment>
					<slist>
						<subst><sname>nofModules</sname><descr>number of modules</descr></subst>
						<subst><sname>nofParams</sname><descr>total number of parameters</descr></subst>
					</slist>
					<cbody>
						<l><m class="TMrbAnalyze">gMrbAnalyze</m>->InitializeLists(<s>nofModules</s>, <s>nofParams</s>);</l>
					</cbody>
					<foreach indent="3">
						<item>module</item>
						<descr>once per module</descr>
						<slist>
							<subst><sname>moduleName</sname><descr>module name</descr></subst>
							<subst><sname>moduleTitle</sname><descr>module title</descr></subst>
							<subst><sname>paramIndex</sname><descr>parameter index</descr></subst>
							<subst><sname>nofParamsUsed</sname><descr>number of parameters used of this module</descr></subst>
						</slist>
						<cbody>
							<l><m class="TMrbAnalyze">gMrbAnalyze</m>-><mm class="TMrbAnalyze">AddModuleToList</mm>("<s>moduleName</s>", "<s>moduleTitle</s>", kMrbModule<S>moduleName</S>, <s>paramIndex</s>, <s>nofParamsUsed</s>, 0);</l>
						</cbody>
					</foreach>
				</code>
				<code indent="2">
					<comment type="code">set time offsets for modules</comment>
					<cbody>
						<l>Int_t timeOffset;</l>
					</cbody>
					<foreach indent="3">
						<tag>MODULE_TIME_OFFSET</tag>
						<item>module</item>
						<descr>once per module</descr>
						<slist>
							<subst><sname>moduleName</sname><descr>module name</descr></subst>
							<subst><sname>moduleTitle</sname><descr>module title</descr></subst>
							<subst><sname>timeOffset</sname><descr>time offset</descr></subst>
						</slist>
						<cbody>
							<l>timeOffset = gEnv->GetValue(<m class="TMrbAnalyze">gMrbAnalyze</m>->GetResource("Module.<S>moduleName</S>.TimeOffset"), <s>timeOffset</s>); //  <s>moduleName</s> (<s>moduleTitle</s>)</l>
							<l><m class="TMrbAnalyze">gMrbAnalyze</m>-><mm class="TMrbAnalyze">SetTimeOffset</mm>(kMrbModule<S>moduleName</S>, timeOffset);</l>
						</cbody>
					</foreach>
				</code>
				<foreach indent="2">
					<tag>EVT_CLASS_INSTANCE</tag>
					<comment type="code">instantiate event classes and book histograms</comment>
					<item>event</item>
					<descr>once per event/trigger</descr>
					<slist>
						<subst><sname>evtName</sname><descr>event name</descr></subst>
						<subst><sname>ptrName</sname><descr>event pointer</descr></subst>
						<subst><sname>trigNo</sname><descr>trigger number</descr></subst>
						<subst><sname>HBflag</sname><descr>allocate hit buffer if TRUE</descr></subst>
					</slist>
					<cbody>
						<l>if (g<S>ptrName</S> == NULL) {		//  event <s>evtName</s>, trigger <s>trigNo</s></l>
						<l>	g<S>ptrName</S> = new TUsrEvt<S>evtName</S>();</l>
						<l>	Bool_t err = g<S>ptrName</S>->IsZombie();</l>
						<l>	if (!err) {</l>
						<l>		err |= !g<S>ptrName</S>->BookParams();</l>
						<l>		err |= !g<S>ptrName</S>->BookHistograms();</l>
						<if indent="3">
							<flag>HBflag</flag>
							<descr>event uses hit buffer</descr>
							<cbody><l>		err |= !g<S>ptrName</S>->AllocHitBuffers();</l></cbody>
						</if>
						<l>	}</l>
						<l>	if (err) {</l>
						<l>		<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Err</mm>() &lt;&lt;  "Something went wrong while creating event \"<s>evtName</s>\"" &lt;&lt; endl;</l>
						<l>		<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "Initialize");</l>
						<l>	}</l>
						<l>}</l>
					</cbody>
				</foreach>
				<foreach indent="2">
					<tag>EVT_USER_CLASS_INSTANCE</tag>
					<comment type="code">instantiate user-defined event classes</comment>
					<item>class</item>
					<descr>once per user class</descr>
					<slist>
						<subst><sname>className</sname><descr>class name</descr></subst>
					</slist>
					<cbody>
						<l>if (g<S>className</S> == NULL) {		//  event <s>className</s></l>
						<l>	g<S>className</S> = new <S>className</S>();</l>
						<l>	Bool_t err = g<S>className</S>->IsZombie();</l>
						<l>	if (err) {</l>
						<l>		<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger"></mm>Err() &lt;&lt; "Something went wrong while creating user-defined event \"<s>className</s>\"" &lt;&lt; endl;</l>
						<l>		<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger"></mm>Flush(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "Initialize");</l>
						<l>	}</l>
						<l>}</l>
						
					</cbody>
				</foreach>
				<code indent="2">
					<comment type="code">instantiate windows</comment>
					<cbody>
						<l>Double_t cut_x0 = 0.; Double_t cut_y0 = 0.;</l>
					</cbody>
					<foreach indent="3">
						<tag>WDW_CLASS_INSTANCE</tag>
						<item>window</item>
						<descr>once per window</descr>
						<slist>
							<subst><sname>wdwClass</sname><descr>window class (1 or 2 dim)</descr></subst>
							<subst><sname>wdwType</sname><descr>window type (1 or 2 dim)</descr></subst>
							<subst><sname>wdwName</sname><descr>window name</descr></subst>
							<subst><sname>wdwLower</sname><descr>lower limit</descr></subst>
							<subst><sname>wdwUpper</sname><descr>upper limit</descr></subst>
						</slist>
						<switch indent="4">
							<item>wdwType</item>
							<case>
								<tag>1D</tag>
								<descr>1dim window</descr>
								<cbody>
									<l>if (<s>wdwName</s> == NULL) <s>wdwName</s> = new <s>wdwClass</s>("<s>wdwName</s>", <s>wdwLower</s>, <s>wdwUpper</s>);</l>
								</cbody>
							</case>
							<case>
								<tag>2D</tag>
								<descr>2dim window</descr>
								<cbody>
									<l>if (<s>wdwName</s> == NULL) <s>wdwName</s> = new <s>wdwClass</s>("<s>wdwName</s>", 1, &amp;cut_x0, &amp; cut_y0);</l>
								</cbody>
							</case>
						</switch>
					</foreach>
				</code>
				<code indent="2">
					<tag>INITIALIZE_SEVT_MODS</tag>
					<comment type="code">initialize subevents and modules</comment>
					<foreach indent="2">
						<item>subevent</item>
						<descr>once per subevent</descr>
						<include indent="3"><descr>initialize subevents</descr></include>
					</foreach>
					<foreach indent="2">
						<item>module</item>
						<descr>once per module</descr>
						<include indent="3"><descr>initialize modules</descr></include>
					</foreach>
				</code>
				<code indent="2">
					<tag>INCLUDE_USER_INITIALIZE_BEFORE_HB</tag>
					<comment type="code">initialize user code (objects, variables ...) - 1st call <b>before</b> booking histograms</comment>
					<slist><subst><sname>initUcode</sname><descr>method to initialize user code</descr></subst></slist>
					<cbody>
						<l><m class="TMrbAnalyze">this</m>-><s>initUcode</s>(<m class="TMrbIOSpec">IOSpec</m>, kTRUE);</l>
					</cbody>
				</code>
				<foreach indent="2">
					<tag>HISTO_BOOK_USER_DEFINED</tag>
					<comment type="code">book histograms defined by user</comment>
					<item>histogram</item>
					<descr>once per histogram</descr>
					<slist>
						<subst><sname>hName</sname><descr>histo name</descr></subst>
						<subst><sname>hType</sname><descr>histo type (THxx)</descr></subst>
						<subst><sname>hTitle</sname><descr>histo title</descr></subst>
						<subst><sname>binSizeX</sname><descr>bin size X</descr></subst>
						<subst><sname>lowerX</sname><descr>lower edge X</descr></subst>
						<subst><sname>upperX</sname><descr>upper edge X</descr></subst>
						<subst><sname>binSizeY</sname><descr>bin size Y</descr></subst>
						<subst><sname>lowerY</sname><descr>lower edge Y</descr></subst>
						<subst><sname>upperY</sname><descr>upper edge Y</descr></subst>
						<subst><sname>condition</sname><descr>condition</descr></subst>
						<subst><sname>args</sname><descr>arg list</descr></subst>
						<subst><sname>bookingMode</sname><descr>booking mode</descr></subst>
					</slist>
					<switch indent="3">
						<item>bookingMode</item>
						<case><tag>UD1</tag><descr>1dim</descr>
							<cbody>
								<l>if (<s>hName</s> == NULL) <s>hName</s> = new <s>hType</s>("<s>hName</s>", "<s>hTitle</s>", <s>binSizeX</s>, <s>lowerX</s>, <s>upperX</s>);</l>
							</cbody>
						</case>
						<case><tag>UD2</tag><descr>2dim</descr>
							<cbody>
								<l>if (<s>hName</s> == NULL) <s>hName</s> = new <s>hType</s>("<s>hName</s>", "<s>hTitle</s>", <s>binSizeX</s>, <s>lowerX</s>, <s>upperX</s>, <s>binSizeY</s>, <s>lowerY</s>, <s>upperY</s>);</l>
							</cbody>
						</case>
						<case><tag>UD1C</tag><descr>1dim + condition</descr>
							<cbody>
								<l>if (<s>hName</s> == NULL &amp;&amp; (<s>condition</s>)) <s>hName</s> = new <s>hType</s>("<s>hName</s>", "<s>hTitle</s>", <s>binSizeX</s>, <s>lowerX</s>, <s>upperX</s>);</l>
							</cbody>
						</case>
						<case><tag>UD2C</tag><descr>2dim + condition</descr>
							<cbody>
								<l>if (<s>hName</s> == NULL &amp;&amp; (<s>condition</s>)) <s>hName</s> = new <s>hType</s>("<s>hName</s>", "<s>hTitle</s>", <s>binSizeX</s>, <s>lowerX</s>, <s>upperX</s>, <s>binSizeY</s>, <s>lowerY</s>, <s>upperY</s>);</l>
							</cbody>
						</case>
						<case><tag>UDS</tag><descr>arg string</descr>
							<cbody>
								<l>if (<s>hName</s> == NULL) <s>hName</s> = new <s>hType</s>("<s>hName</s>", "<s>hTitle</s>", <s>args</s>);</l>
							</cbody>
						</case>
						<case><tag>UDSC</tag><descr>arg string + condition</descr>
							<cbody>
								<l>if (<s>hName</s> == NULL &amp;&amp; (<s>condition</s>)) <s>hName</s> = new <s>hType</s>("<s>hName</s>", "<s>hTitle</s>", <s>args</s>);</l>
							</cbody>
						</case>
					</switch>	
				</foreach>
				<foreach indent="2">
					<tag>HISTO_FILL_ARRAYS</tag>
					<comment type="code">fill histogram arrays</comment>
					<item>histogram</item>
					<descr>once per histogram</descr>
					<slist>
						<subst><sname>hArrayName</sname><descr>array name</descr></subst>
						<subst><sname>hName</sname><descr>histo name</descr></subst>
					</slist>
					<cbody>
						<l>if (<s>hArrayName</s>.FindObject("<s>hName</s>") == NULL) <s>hArrayName</s>.Add(<s>hName</s>);</l>
					</cbody>
				</foreach>
				<code indent="2">
					<tag>INCLUDE_USER_INITIALIZE_AFTER_HB</tag>
					<comment type="code">initialize user code (objects, variables ...) - 2nd call <b>after</b> booking histograms</comment>
					<slist><subst><sname>initUcode</sname><descr>method to initialize user code</descr></subst></slist>
					<cbody>
						<l><m class="TMrbAnalyze">this</m>-><s>initUcode</s>(<m class="TMrbIOSpec">IOSpec</m>, kFALSE);</l>
					</cbody>
				</code>
				<cbody indent="2">
					<l>return(kTRUE);</l>
				</cbody>
			</code>
		</method>
		<method indent="1">
			<tag>HANDLE_MESSAGES</tag>
			<methodHdr>
				<mname>HandleMessage</mname>
				<cname><m>TMrbAnalyze</m></cname>
				<purp>Respond to message requests sent by the message handler</purp>
				<argList>
					<arg>
						<aname>Args</aname>
						<atype>Char_t *</atype>
						<descr>argument list</descr>
					</arg>
				</argList>
				<returnVal>
					<arg>
						<aname>Flag</aname>
						<atype>Bool_t</atype>
						<descr>kTRUE/kFALSE</descr>
					</arg>
				</returnVal>
				<descr>Dummy method, may be overwritten by user's own code</descr>
			</methodHdr>
			<code indent="2"><cbody>
				<l>return(kFALSE);</l>
			</cbody></code>			
		</method>
		<method indent="1">
			<tag>RELOAD_PARAMS</tag>
			<methodHdr>
				<mname>ReloadParams</mname>
				<cname><m>TMrbAnalyze</m></cname>
				<purp>Reload parameters from file</purp>
				<argList>
					<arg>
						<aname>IOSpec</aname>
						<atype><m>TMrbIOSpec</m> *</atype>
						<descr>i/o specifications</descr>
					</arg>
				</argList>
				<returnVal>
					<arg>
						<aname>Flag</aname>
						<atype>Bool_t</atype>
						<descr>kTRUE/kFALSE</descr>
					</arg>
				</returnVal>
				<descr>Reloads params (vars, wdws, functions etc.) from root file<nl/>May be overwritten by user</descr>
			</methodHdr>
			<code indent="2">
				<cbody>
					<l>Bool_t sts = <m class="TMrbAnalyze">this</m>-><mm class="TMrbAnalyze">ReloadVarsAndWdws</mm>(<m class="TMrbIOSpec">IOSpec</m>);</l>
					<l><m class="TMrbAnalyze">this</m>->AdjustWindowPointers();</l>
					<l>return(sts);	</l>
				</cbody>
			</code>			
		</method>
		<method indent="1">
			<tag>FINISH_RUN</tag>
			<methodHdr>
				<mname>FinishRun</mname>
				<cname><m>TMrbAnalyze</m></cname>
				<purp>Do some work at end of run</purp>
				<argList>
					<arg>
						<aname>BeforeSH</aname>
						<atype>Bool_t</atype>
						<descr>kTRUE if called before saving histos</descr>
					</arg>
				</argList>
				<returnVal>
					<arg>
						<aname>Flag</aname>
						<atype>Bool_t</atype>
						<descr>kTRUE/kFALSE</descr>
					</arg>
				</returnVal>
				<descr>Dummy method, may be overwritten by user's own code<nl/>Will be called twice - before and after saving histograms</descr>
			</methodHdr>
			<code indent="2">
				<cbody>
					<l>return(kFALSE);</l>
				</cbody>
			</code>			
		</method>
		<method indent="1">
			<tag>WDW_ADJUST_POINTERS</tag>
			<methodHdr>
				<mname>AdjustWindowPointers</mname>
				<cname><m>TMrbAnalyze</m></cname>
				<purp>Adjust pointers to (2-dim) windows after reload</purp>
				<returnVal>
					<arg>
						<aname>Flag</aname>
						<atype>Bool_t</atype>
						<descr>kTRUE/kFALSE</descr>
					</arg>
				</returnVal>
			</methodHdr>
			<code indent="2">
				<slist>
					<subst><sname>wdwName</sname><descr>window name</descr></subst>
					<subst><sname>className</sname><descr>class name</descr></subst>
				</slist>
				<cbody>
					<l><s>varName</s> = (<s>className</s> *) <m class="TMrbLofUserVars">gMrbLofUserVars</m>-><mm class="TMrbLofUserVars">Find</mm>("<s>varName</s>");</l>
				</cbody>
			</code>			
		</method>
		<method indent="1">
			<methodHdr>
				<mname>WriteRootTree</mname>
				<cname><m>TMrbAnalyze</m></cname>
				<purp>Open a file to write raw data to tree</purp>
				<argList>
					<arg>
						<aname>IOSpec</aname>
						<atype><m>TMrbIOSpec</m> *</atype>
						<descr>i/o specifications</descr>
					</arg>
				</argList>
				<returnVal>
					<arg>
						<aname>Flag</aname>
						<atype>Bool_t</atype>
						<descr>kTRUE/kFALSE</descr>
					</arg>
				</returnVal>
			</methodHdr>
			<code>
				<cbody>
					<l><r>TString</r> rootFile;</l>
					<l>if ((<m class="TMrbIOSpec">IOSpec</m>->GetOutputMode() &amp; <m>TMrbIOSpec</m>::kOutputOpen) == 0) return(kTRUE);</l>
		
					<l>if (fWriteRootTree) {</l>
					<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Err</mm>() &lt;&lt; "ROOT file already open - " &lt;&lt; fRootFileOut-><rm class="TObject">GetName</rm>() &lt;&lt; endl;</l>
					<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
					<l>	return(kFALSE);</l>
					<l>}</l>
					
					<l>rootFile = IOSpec->GetOutputFile();</l>
					
					<l>if (verboseMode) {</l>
					<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Out</mm>() &lt;&lt; "Opening ROOT file \"" &lt;&lt; rootFile &lt;&lt; "\"" &lt;&lt; endl;</l>
					<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
					<l>}</l>
					
					<l>fRootFileOut = new <r>TFile</r>(rootFile.Data(), "RECREATE", "<s>expTitle</s>");</l>
					<l>fRootFileOut-><rm class="TFile">SetCompressionLevel</rm>(1);</l>
					<l>fWriteRootTree = kTRUE;</l>
					
					<l>// create trees for start/stop info</l>
					<l><m class="TUsrEvtStart">gStartEvent</m>-><mm class="TUsrEvtStart">CreateTree</mm>();</l>
					<l><m class="TUsrEvtStop">gStopEvent</m>-><mm class="TUsrEvtStop">CreateTree</mm>();</l>
					
					<l>// create tree to hold dead-time data</l>
					<l><m class="TUsrDeadTime">gDeadTime</m>-><mm class="TUsrDeadTime">CreateTree</mm>();</l>
				</cbody>
				<foreach indent="2">
					<tag>EVT_CREATE_TREE</tag>
					<comment type="code">create ROOT trees for each event</comment>
					<item>event</item>
					<descr>once per event</descr>
					<slist>
						<subst><sname>className</sname><descr>class name</descr></subst>
						<subst><sname>evtName</sname><descr>event name</descr></subst>
						<subst><sname>trigNo</sname><descr>trigger number</descr></subst>
					</slist>
					<cbody>
						<switch indent="3">
							<item>eventType</item>
							<case>
								<tag>E</tag>
								<descr>normal (hardware) event</descr>
								<cbody>
									<l>g<S>className</S>->CreateTree();  // event <s>evtName</s>, trigger <s>trigNo</s></l>
								</cbody>
							</case>
							<case>
								<tag>U</tag>
								<descr>user-defined event</descr>
								<cbody>
									<l>g<S>className</S>->CreateTree(); // user-defined event <s>className</s></l>
								</cbody>
							</case>
						</switch>
					</cbody>
				</foreach>
				<foreach indent="2">
					<tag>EVT_SET_WRITE_TREE</tag>
					<comment type="code">control tree output individually for each event</comment>
					<item>event</item>
					<descr>once per event</descr>
					<slist>
						<subst><sname>className</sname><descr>class name</descr></subst>
						<subst><sname>evtName</sname><descr>event name</descr></subst>
						<subst><sname>trigNo</sname><descr>trigger number</descr></subst>
					</slist>
					<cbody>
						<switch indent="3">
							<item>eventType</item>
							<case>
								<tag>E</tag>
								<descr>normal (hardware) event</descr>
								<cbody>
									<l>// event <s>evtName</s>, trigger <s>trigNo</s></l>
									<l>g<S>className</S>->WriteTree(<r class="TEnv">gEnv</r>-><rm class="TEnv">GetValue</rm>(<m class="TMrbAnalyze">gMrbAnalyze</m>-><mm class="TMrbAnalyze">GetResource</mm>("Event.<S>evtName</S>.WriteTree"), kTRUE));</l>										
									<l>if (!g<S>className</S>->TreeToBeWritten()) {</l>
									<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Wrn</mm>() &lt;&lt; "Output of tree data TURNED OFF for event \",<s>evtName</s>\"" &lt;&lt; endl;</l>
									<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
									<l>}</l>
								</cbody>
							</case>
							<case>
								<tag>U</tag>
								<descr>user-defined event</descr>
								<cbody>
									<l>// user-defined event <s>className</s></l>
									<l>g<S>className</S>->WriteTree(<r class="TEnv">gEnv</r>-><rm class="TEnv">GetValue</rm>(<m class="TMrbAnalyze">gMrbAnalyze</m>-><mm class="TMrbAnalyze">GetResource</mm>("Event.<S>evtName</S>.WriteTree"), kTRUE));</l>	
									<l>if (!g<S>className</S>->TreeToBeWritten()) {</l>
									<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Wrn</mm>() &lt;&lt; "Output of tree data TURNED OFF for event \",<s>className</s>\"" &lt;&lt; endl;</l>
									<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
									<l>}</l>
								</cbody>
							</case>
						</switch>
					</cbody>
				</foreach>
			</code>
		</method>
		<method indent="1">
			<methodHdr>
				<mname>OpenRootFile</mname>
				<cname><m>TMrbAnalyze</m></cname>
				<purp>Open a file to replay tree data</purp>
				<argList>
					<arg>
						<aname>IOSpec</aname>
						<atype><m>TMrbIOSpec</m> *</atype>
						<descr>i/o specifications</descr>
					</arg>
				</argList>
				<returnVal>
					<arg>
						<aname>Flag</aname>
						<atype>Bool_t</atype>
						<descr>kTRUE/kFALSE</descr>
					</arg>
				</returnVal>
				<descr>Opens an existing raw data file (replay mode only)</descr>
			</methodHdr>
			<code>
				<cbody>
					<l><r>TString</r> rootFile;</l>
					<l>if ((<m class="TMrbIOSpec">IOSpec</m>->GetInputMode() &amp; <m>TMrbIOSpec</m>::kInputRoot) == 0) return(kTRUE);</l>
					
					<l>if (fRootFileIn != NULL) {</l>
					<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Err</mm>() &lt;&lt; "ROOT file already open - " &lt;&lt; fRootFileOut-><rm class="TObject">GetName</rm>() &lt;&lt; endl;</l>
					<l>	<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "OpenRootFile");</l>
					<l>	return(kFALSE);</l>
					<l>}</l>
					<l>rootFile = IOSpec->GetInputFile();</l>
					<l>if (rootFile.<rm class="TString">CompareTo</rm>("fake.root") == 0) {</l>
					<l>	<m class="TMrbAnalyze">this</m>->SetFakeMode();</l>
				</cbody>
				<foreach indent="2">
					<tag>EVT_SET_FAKE_MODE</tag>
					<comment type="code">set fake mode for all trees</comment>
					<item>event</item>
					<descr>once per event</descr>
					<slist>
						<subst><sname>className</sname><descr>class name</descr></subst>
						<subst><sname>evtName</sname><descr>event name</descr></subst>
						<subst><sname>trigNo</sname><descr>trigger number</descr></subst>
					</slist>
					<cbody>
						<switch indent="3">
							<item>eventType</item>
							<case>
								<tag>E</tag>
								<descr>normal (hardware) event</descr>
								<cbody>
									<l>// event <s>evtName</s>, trigger <s>trigNo</s></l>
									<l>g<S>className</S>->SetFakeMode();</l>										
								</cbody>
							</case>
							<case>
								<tag>U</tag>
								<descr>user-defined event</descr>
								<cbody>
									<l>// user-defined event <s>className</s></l>
									<l>g<S>className</S>->->SetFakeMode();</l>
								</cbody>
							</case>
						</switch>
					</cbody>
				</foreach>
				<cbody>
					<l>	if (verboseMode) {</l>
					<l>		<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Err</mm>() &lt;&lt; "Running in FAKE mode" &lt;&lt; endl;</l>
					<l>		<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "OpenRootFile");</l>
					<l>		return(kFALSE);</l>
					<l>	}</l>
					<l>} else {</l>
					<l>	<m class="TSystem">gSystem</m>-><mm class="TSystem">ExpandPathName</mm>(rootFile);</l>
					<l>	if(<m class="TSystem">gSystem</m>-><mm class="TSystem">AccessPathName</mm>(rootFile, kFileExists)){</l>
					<l>		<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Err</mm>() &lt;&lt; "No such file - " &lt;&lt;  rootFile &lt;&lt; endl;</l>
					<l>		<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "OpenRootFile");</l>
					<l>		return(kFALSE);</l>
					<l>	} else {</l>
					<l>		if (verboseMode) {</l>
					<l>			<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Out</mm>() &lt;&lt; "Opening ROOT file \"" &lt;&lt; rootFile &lt;&lt; "\"" &lt;&lt; endl;</l>
					<l>			<m class="TMrbLogger">gMrbLog</m>-><mm class="TMrbLogger">Flush</mm>(<m class="TMrbAnalyze">this</m>-><rm class="TObject">ClassName</rm>(), "WriteRootTree");</l>
					<l>	}</l>
					<l>}</l>
				</cbody>
			</code>
		</method>
	</file>
</mrbcode>
